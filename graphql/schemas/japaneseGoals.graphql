extend type Mutation {
    delete_japanese_goals(id: ID! @spread): Boolean @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@deletejapaneseGoal")
    create_japanese_goals(input: CreateJapaneseGoalInput! @spread): JapaneseGoal @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@createJapaneseGoal")
    update_japanese_goals(input: UpdateJapaneseGoalInput! @spread): JapaneseGoal @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@updateJapaneseGoal")
    upsert_japanese_goals(input: UpsertJapaneseGoalInput! @spread): JapaneseGoal @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@upsertJapaneseGoal")
    updateMeetUrl_sing_with_friend(input: UpdateMeetUrlInput! @spread): Boolean @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@updateMeetUrl_sing_with_friend")
    rename_flashcard_category(old_name: String!, new_name: String! @spread): Boolean @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@renameFlashcardCategory")
}
extend type Query {
    japanese_goals: [JapaneseGoal] @paginate(type: "paginator" model: "App\\Models\\JapaneseGoal")
    sort_japanese_goals(orderBy: [OrderByClause!] @orderBy): [JapaneseGoal!]! @paginate(type: "paginator" model: "App\\Models\\JapaneseGoal")
    detail_japanese_goal(id: ID, goal_id: ID): JapaneseGoal @field(resolver:"JapaneseGoalQueries@detailJapaneseGoal")
    search_by_type_japanese_goal(type:String): [JapaneseGoal] @field(resolver:"JapaneseGoalQueries@searchByTypeJapaneseGoal")
    my_basket_or_card(type:String!): JSON @guard @field(resolver:"JapaneseGoalQueries@myBasketOrCard")
    my_diary(type:String!): JSON @guard @field(resolver:"JapaneseGoalQueries@myDiary")
    my_diary_invited: JSON @guard @field(resolver:"JapaneseGoalQueries@myDiaryInvited")
    flashcard_category(type:String!): JSON @guard @field(resolver:"JapaneseGoalQueries@flashcardCategory")
    my_flashcard_study(goal_id:ID): JSON @guard @field(resolver:"JapaneseGoalQueries@myFlashcardStudy")
}

type JapaneseGoal{
    id: ID
    user : User
    goal : Goal
    goal_root: Goal
    root_id: ID
    goal_id : ID
    next_goal: NextAndPrevGoal
    prev_goal: NextAndPrevGoal
    type: String
    more : JSON
    total_score: Float
    card_box_topics:String
    each_score: Float
     score : Float
    list_users: [User]
    attachments_1 : JSON
    attachments_2 : JSON
    attachments_3 : JSON
}
type NextAndPrevGoal{
    id: ID
    name: String
    type: String
}
input CreateJapaneseGoalInput{
    name_goal: String
    goal_id: ID
    parent_id: ID
#    type : String @rules(apply:["nullable","in:watch_video,communication,vocabulary_grammar,alphabet"])
    type : String
    more : JSON
    total_score : Float
    score : Float
    each_score : Float
    root_id: ID

}
input UpdateJapaneseGoalInput{
    id : ID
    goal_id : ID
    # type : String @rules(apply:["nullable","in:watch_video,communication,vocabulary_grammar,alphabet"])
    type : String
    more : JSON
    total_score : Float
    each_score : Float
    score : Float
    root_id: ID
}
input UpsertJapaneseGoalInput{
    id : ID
    parent_id : ID
    root_id : ID
    name_goal: String
    type : String
    more : JSON
    total_score : Float
    each_score : Float
    root_id: ID
}
input UpdateMeetUrlInput{
    goal_id : ID!
    meet: JSON
}