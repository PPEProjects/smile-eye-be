extend type Mutation {
    delete_japanese_goals(id: ID! @spread): Boolean @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@deletejapaneseGoal")
    create_japanese_goals(input: CreateJapaneseGoalInput! @spread): JapaneseGoal @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@createJapaneseGoal")
    update_japanese_goals(input: UpdateJapaneseGoalInput! @spread): JapaneseGoal @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@updateJapaneseGoal")

    #basket and card
    create_basket_card(input: CreateBasketCardInput! @spread): JapaneseGoal @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@createBasketCard")
    update_basket_card(input: UpdateBasketCardInput! @spread): JapaneseGoal @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@updateBasketCard")
    delete_basket_card(id: ID! @spread): Boolean @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@deleteBasketCard")

    #flash card
    create_flash_card(input: CreateBasketCardInput! @spread): JapaneseGoal @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@createFlashCard")
    update_flash_card(input: UpdateBasketCardInput! @spread): JapaneseGoal @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@updateFlashCard")
    delete_flash_card(id: ID! @spread): Boolean @guard @field(resolver: "App\\GraphQL\\Mutations\\JapaneseGoalMutations@deleteFlashCard")
}
extend type Query {
    japanese_goals: [JapaneseGoal] @paginate(type: "paginator" model: "App\\Models\\JapaneseGoal")
    sort_japanese_goals(orderBy: [OrderByClause!] @orderBy): [JapaneseGoal!]! @paginate(type: "paginator" model: "App\\Models\\JapaneseGoal")
    detail_japanese_goal(id: ID, goal_id: ID): JapaneseGoal @field(resolver:"JapaneseGoalQueries@detailJapaneseGoal")
    search_by_type_japanese_goal(type:String): [JapaneseGoal] @field(resolver:"JapaneseGoalQueries@searchByTypeJapaneseGoal")
#    my_japanese_goals(parent_id:String!): [JapaneseGoal] @guard @field(resolver:"JapaneseGoalQueries@myJapaneseGoals")
# backet and card

    basket_cards: [JapaneseGoal]@field(resolver:"JapaneseGoalQueries@basketCards")
    detail_basket_card(id: ID): JapaneseGoal @field(resolver:"JapaneseGoalQueries@detailBasketCard")
    my_basket_cards: [JapaneseGoal] @guard @field(resolver:"JapaneseGoalQueries@myBasketCards")

    #flash card

    flash_cards: [JapaneseGoal]@field(resolver:"JapaneseGoalQueries@flashCards")
    detail_flash_card(id: ID): JapaneseGoal @field(resolver:"JapaneseGoalQueries@detailFlashCard")
    my_flash_cards: [JapaneseGoal] @guard @field(resolver:"JapaneseGoalQueries@myFlashCards")
}

type JapaneseGoal{
    id: ID
    goal : Goal
    goal_root: Goal
    goal_id : ID
    type: String
    more : JSON
    score: Float
    attachments_1 : JSON
    attachments_2 : JSON
    attachments_3 : JSON
}

input CreateJapaneseGoalInput{
    name_goal: String
    goal_id: ID
    parent_id: ID
#    type : String @rules(apply:["nullable","in:watch_video,communication,vocabulary_grammar,alphabet"])
    type : String
    more : JSON
    score : Float

}
input CreateBasketCardInput{
    type : String
    more : JSON
    name_goal: String
    parent_id: ID

}
input UpdateJapaneseGoalInput{
    id : ID
    goal_id : ID
    type : String @rules(apply:["nullable","in:watch_video,communication,vocabulary_grammar,alphabet"])
    more : JSON
    attachments_1 :[ID]
    attachments_2 :[ID]
    attachments_3 :[ID]
    score : Float
}
input UpdateBasketCardInput{
    id : ID
    more : JSON
}
