
extend type Mutation {
#    create_goal_member(input: CreateGoalMemberInput! @spread): GoalMember @guard @field(resolver: "App\\GraphQL\\Mutations\\GoalMemberMutations@createGoalMember")
#    update_goal_member(input: UpdateGoalMemberInput! @spread): GoalMember @guard @field(resolver: "App\\GraphQL\\Mutations\\GoalMemberMutations@updateGoalMember")
    upsert_goal_member(input: UpsertGoalMemberInput! @spread): [GoalMember] @guard @field(resolver: "App\\GraphQL\\Mutations\\GoalMemberMutations@upsertGoalMember")
    delete_goal_member(input: DeleteGoalMemberInput! @spread): Boolean @guard @field(resolver: "App\\GraphQL\\Mutations\\GoalMemberMutations@deleteGoalMember")
    delete_goal_member_by_goal_id(input: DeleteGoalMemberInput! @spread): Boolean @guard @field(resolver: "App\\GraphQL\\Mutations\\GoalMemberMutations@deleteGoalMemberByGoalId")

}

extend type Query {
    goal_members(name_add_user: String, name_goal: String): [GoalMember] @guard @field(resolver:"GoalMemberQueries@goalMembers")
    sort_goal_members(orderBy: [OrderByClause!] @orderBy): [GoalMember] @paginate(type: "paginator" model: "App\\Models\\GoalMember")
    my_goal_members: [GoalMember] @guard @field(resolver:"GoalMemberQueries@myGoalMembers")
    detail_goal_member(id : ID!): GoalMember @guard @field(resolver:"GoalMemberQueries@detailGoalMembers")
    summary_goal_members: [GoalTemplate] @field(resolver:"GoalMemberQueries@summaryGoalMembers")
}

type GoalMember{
    id: ID
    add_user: User
    user: User
    user_id : ID
    add_user_id: ID
    goal_id: ID
    goal: Goal
    created_at: DateTime
    updated_at: DateTime
}

input UpsertGoalMemberInput{
    id: ID
    add_user_id: ID
    goal_id: ID
    goal_ids: [ID]
}

input CreateGoalMemberInput{
    add_user_id: ID
    goal_id: ID
}

input UpdateGoalMemberInput{
    id: ID!
    add_user_id: ID
    goal_id: ID
}

input DeleteGoalMemberInput{
    id: ID
    goal_id: ID
}


