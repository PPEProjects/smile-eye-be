{
	"info": {
		"_postman_id": "8e162c3a-de2c-488e-b9b5-ac3575a053bf",
		"name": "se-be-v2.ppe.edu.vn",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth-core",
			"item": [
				{
					"name": "{{url}}/ppe-core/auth/register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Hoai Nam\",\n    \"email\": \"hoainam123@gmail.com\",\n    \"password\": \"hoainam123\",\n    \"password_confirmation\": \"hoainam123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/ppe-core/auth/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"ppe-core",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/ppe-core/auth/logout",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/ppe-core/auth/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"ppe-core",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/ppe-core/auth/login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"ss\",\n    \"password\": \"PhuongPPe1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/ppe-core/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"ppe-core",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/ppe-core/auth/reset-password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"nhnam1632@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/ppe-core/auth/reset-password",
							"host": [
								"{{url}}"
							],
							"path": [
								"ppe-core",
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/ppe-core/auth/reset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\":\"755251\",\n    \"password\":\"oknhe\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/ppe-core/auth/reset",
							"host": [
								"{{url}}"
							],
							"path": [
								"ppe-core",
								"auth",
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/ppe-core/auth/change-password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"old_password\": \"hhhhhh\",\r\n    \"new_password\":\"hoainam123\",\r\n    \"confirm_password\":\"hoainam123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/ppe-core/auth/change-pass",
							"host": [
								"{{url}}"
							],
							"path": [
								"ppe-core",
								"auth",
								"change-pass"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/ppe-core/auth/generate link",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/ppe-core/auth/generate-url?platform=facebook",
							"host": [
								"{{url}}"
							],
							"path": [
								"ppe-core",
								"auth",
								"generate-url"
							],
							"query": [
								{
									"key": "platform",
									"value": "facebook"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/email/verify/{id}",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/email/verify/{id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"verify",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/ppe-core/auth/email-check",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"nhnamsđas2@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/ppe-core/auth/email-check",
							"host": [
								"{{url}}"
							],
							"path": [
								"ppe-core",
								"auth",
								"email-check"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "payments",
			"item": [
				{
					"name": "upsert_payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id:ID\r\n   $add_user_id: ID\r\n    $goal_id: [ID]\r\n    $type: String\r\n    $status: String\r\n    $money: String\r\n    $attachments: JSON\r\n) {\r\n  upsert_payment(\r\n    input: {\r\n        id: $id\r\n     add_user_id: $add_user_id\r\n     goal_id: $goal_id\r\n     money: $money\r\n     status: $status\r\n     type: $type\r\n     attachments: $attachments\r\n    }\r\n  ) {\r\n    id\r\n    user{\r\n        id\r\n    }\r\n    add_user_id\r\n    goal_id\r\n    status\r\n    type\r\n    money\r\n    attachments\r\n    created_at\r\n    updated_at\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"add_user_id\": 4,\r\n    \"goal_id\":16378294705,\r\n    \"status\": \"pending\",\r\n    \"money\": \"20000\",\r\n    \"attachments\":[{\r\n        \"id\":5,\r\n        \"thumb\":\"xbz.img\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  delete_payment(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 2\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_paments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  payments(first:22, page:1) {\r\n    data {\r\n     id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    add_user_id\r\n    goal_id\r\n    type\r\n    money\r\n    created_at\r\n    updated_at\r\n  }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_ payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\r\n  detail_payment(\r\n      id: $id\r\n    ) {\r\n   id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    status\r\n    add_user_id\r\n    goal_id\r\n    type\r\n    money\r\n    attachments\r\n    created_at\r\n    updated_at\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"id\": 4\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_ my_payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($goal_id: ID!){\r\n  detail_my_payment(\r\n      goal_id: $goal_id\r\n    ) {\r\n   id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    status\r\n    add_user_id\r\n    goal_id\r\n    type\r\n    money\r\n    attachments\r\n    created_at\r\n    updated_at\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"goal_id\": 1\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_ payment_by_user_id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query(\r\n        $type: String,\r\n        $user_id: ID!,\r\n        $status: String\r\n        ){\r\n  detail_payment_by_user_id(\r\n      type:$type\r\n      user_id: $user_id\r\n      status: $status\r\n    ) {\r\n   id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    add_user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    add_user_id\r\n    status\r\n    goal_id\r\n    type\r\n    money\r\n    attachments\r\n    created_at\r\n    updated_at\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"user_id\":  20366\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_payments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  my_payments{\r\n    id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    add_user_id\r\n    goal_id\r\n    status\r\n    type\r\n    money\r\n    attachments\r\n    created_at\r\n    updated_at\r\n  }\r\n    \r\n}",
								"variables": "{\r\n    \r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query total_income",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query(\r\n    $year: String\r\n    $month: String\r\n) {\r\n  total_income(\r\n      year: $year\r\n      month: $month\r\n  )\r\n    \r\n  \r\n    \r\n}",
								"variables": "{\r\n    \"year\":\"2021\",\r\n    \"month\":\"12\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query summary_payments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query(\r\n    $status: String\r\n) {\r\n  summary_payments(\r\n      status: $status\r\n  ){\r\n    id\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n   number_member\r\n    status\r\n    type\r\n    created_at\r\n  }\r\n    \r\n}",
								"variables": "{\r\n    \"status\": \"paidConfirmed\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_payments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_payments(\r\n      \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n    id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    status\r\n    add_user_id\r\n    goal_id\r\n    type\r\n    money\r\n    created_at\r\n    updated_at\r\n  }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n\r\n",
								"variables": "{\r\n    \r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"created_at\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "friend_groups",
			"item": [
				{
					"name": "create_friend_groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\n    $name : String\n    $people: JSON\n\n) {\n  create_friend_groups(\n    input: {\n      name : $name\n      people: $people\n    }\n  )\n  {\n      id\n    user{\n        id\n        name\n    }\n    name\n    people\n    created_at\n    updated_at\n    \n  }\n}",
								"variables": "{\n    \"name\" : \"Nhóm học tiếng nhật\",\n    \"people\":[\n        {\n      \"user_id\":154,\n      \"role\":\"admin\"\n    },\n    {\n      \"user_id\":120,\n      \"role\":\"member\"\n    }\n    ]\n\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_friend_groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\n    $id: ID\n    $name : String\n    $people: JSON\n\n) {\n  update_friend_groups(\n    input: {\n      id: $id\n      name : $name\n      people: $people\n    }\n  )\n  {\n      id\n    user{\n        id\n        name\n    }\n    name\n    people\n    created_at\n    updated_at\n    \n  }\n}",
								"variables": "{\n    \"id\" : 5,\n    \"name\" : \"Nhóm tà đạo haha\",\n    \"people\":[\n        {\n            \"user_id\":5,\n            \"role\":\"admin\"\n        },\n        {\n            \"user_id\":3,\n            \"role\":\"member\"\n        },\n        {\n            \"user_id\":1,\n            \"role\":\"mod\"\n        },\n        {\n            \"user_id\":4,\n            \"role\":\"mod\"\n        },\n        {\n            \"user_id\":2,\n            \"role\":\"member\"\n        }\n    ]\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_friend_groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n    delete_friend_groups(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 2\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "add_member_friend_groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id: ID!\r\n    $user_ids: [ID!]\r\n    ) {\r\n    add_member_friend_groups(\r\n    input: {\r\n      id: $id\r\n      user_ids: $user_ids\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 5,\r\n    \"user_ids\": [2,3,4]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_member_friend_groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id: ID!\r\n    $user_id: ID!\r\n    ) {\r\n    delete_member_friend_groups(\r\n    input: {\r\n      id: $id\r\n      user_id: $user_id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 5,\r\n    \"user_id\": 2\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "search_friend_groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($name: String){\r\n  search_friend_groups(\r\n      name: $name     \r\n) {      \r\n    id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    name\r\n    people\r\n    created_at\r\n    updated_at\r\n    }\r\n}",
								"variables": "{\r\n    \"name\":\"tiếng\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "change_role_friend_groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id: ID!\r\n    $user_id: ID!\r\n    $role: String!){\r\n  change_role_friend_groups(\r\n      input: {\r\n      id: $id\r\n      user_id: $user_id\r\n      role: $role\r\n    }     \r\n) \r\n}",
								"variables": "{\r\n    \"id\": 36,\r\n    \"user_id\": 120,\r\n    \"role\": \"admin\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_friend_groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  friend_groups(first:20, page:1) {\r\n    data {\r\n     id\r\n     name\r\n     people\r\n    created_at\r\n    updated_at\r\n    \r\n  }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "detail_friend_groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\r\n  detail_friend_groups(\r\n      id: $id     \r\n) {      \r\n    id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    name\r\n    people\r\n    created_at\r\n    updated_at\r\n    }\r\n}",
								"variables": "{\r\n    \"id\": 3\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "my_friend_groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  my_friend_groups{      \r\n    id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    name\r\n    people\r\n    created_at\r\n    updated_at\r\n    }\r\n}",
								"variables": "{\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "publish-info",
			"item": [
				{
					"name": "create_publishInfo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation(\n    $general_id : ID\n    $user_invite_id : ID\n    $status : String\n    $rule : String\n    $is_copy : Boolean\n\n) {\n  create_publishInfo(\n    input: {\n       general_id:$general_id\n       user_invite_id:$user_invite_id\n       status : $status\n       rule : $rule\n       is_copy:$is_copy\n    }\n  )\n}",
								"variables": "{\n    \"general_id\" : 45,\n    \"user_invite_id\" : 2,\n    \"status\" : \"private\",\n    \"rule\" :\"view\",\n    \"is_copy\" : false\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_publishInfo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation(\n    $id : ID\n    $general_id : ID\n    $user_invite_id : ID\n    $status : String\n    $rule : String\n    $is_copy : Boolean\n\n) {\n  update_publishInfo(\n    input: {\n       id : $id\n       general_id:$general_id\n       user_invite_id:$user_invite_id\n       status : $status\n       rule : $rule\n       is_copy:$is_copy\n    }\n  ) {\n      id\n      general{\n          id\n      }\n    user_invite{\n        id\n    }\n    status\n    rule\n    is_copy\n    created_at\n    updated_at\n    \n  }\n}",
								"variables": "{\n    \"general_id\" : 10430,\n    \"status\" : \"accept\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_publish_info",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n    delete_publishInfo(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 1\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_publishInfos",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  publishInfos(first:20, page:1) {\r\n    data {\r\n     id\r\n      general{\r\n          id\r\n      }\r\n    user_invite{\r\n        id\r\n    }\r\n    status\r\n    rule\r\n    is_copy\r\n    created_at\r\n    updated_at\r\n    \r\n  }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "detail_publishInfo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\r\n  detail_publishInfo(\r\n      id: $id\r\n     \r\n    ) {\r\n         id\r\n      general{\r\n          id\r\n      }\r\n    user_invite{\r\n        id\r\n    }\r\n    status\r\n    rule\r\n    is_copy\r\n    created_at\r\n    updated_at\r\n    \r\n    }\r\n}",
								"variables": "{\r\n    \"id\": 1\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "search_publishInfos",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($status: String!, $first: Int!, $page: Int!, $orderBy: [OrderByClause!]) {\r\n  search_publishInfos(status: $status, first: $first, page: $page, orderBy: $orderBy) {\r\n    data {\r\n      id\r\n      general{\r\n          id\r\n      }\r\n    user_invite{\r\n        id\r\n    }\r\n    status\r\n    rule\r\n    is_copy\r\n    created_at\r\n    updated_at\r\n    \r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \"status\": \"%\",\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"ASC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "sort_publishInfos",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_publishInfos(\r\n      \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n       id\r\n      general{\r\n          id\r\n      }\r\n    user_invite{\r\n        id\r\n    }\r\n    status\r\n    rule\r\n    is_copy\r\n    created_at\r\n    updated_at\r\n    \r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "coach_members",
			"item": [
				{
					"name": "upsert_coach_members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation(\n    $user_id: ID\n    $org: String\n    $business_field: String\n    $goal_ids: [ID]\n    $scale: String\n\n) {\n  upsert_coach_member(\n    input: {\n        user_id: $user_id\n        org: $org\n        business_field: $business_field\n        goal_ids: $goal_ids\n        scale: $scale\n    }\n  ){\n      id\n      user{\n          id\n          name\n      }\n      org\n      business_field\n    goal_ids\n      scale\n      created_at\n      updated_at\n  }\n}",
								"variables": "{\n    \"user_id\": 2,\n   \"goal_ids\":[1,40,6,4],\n   \"scale\": \"else\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "add_coach_members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation(\n    $user_ids: [ID]\n    $goal_ids: [ID]\n) {\n  add_coach_member(\n    input: {\n        user_ids: $user_ids\n         goal_ids:  $goal_ids\n    }\n  )\n\n }",
								"variables": "{\n   \"user_ids\": [4],\n   \"goal_ids\":[1637633928650996819]\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "add_goals_to_teacher",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation(\n    $user_id: ID\n    $goal_ids: [ID]\n) {\n  add_goals_to_my_teacher(\n    input: {\n        user_id: $user_id\n        goal_ids: $goal_ids\n    }\n  )\n\n }",
								"variables": "{\n   \"user_id\": 1,\n   \"goal_ids\":[40,6,9]\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_coach_members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation(\n    $id: ID\n    $org: String\n    $business_field: String\n    $goal_ids: JSON\n    $teacher_id: ID\n    $scale: String\n\n) {\n  update_coach_member(\n    input: {\n        id: $id\n        org: $org\n        business_field: $business_field\n        goal_ids: $goal_ids\n        teacher_id: $teacher_id\n        scale: $scale\n    }\n  ){\n      id\n      user{\n          id\n          name\n      }\n      org\n      business_field\n    goal_ids\n    teacher_id\n      scale\n      created_at\n      updated_at\n  }\n}",
								"variables": "{\n    \"id\" : 2,\n    \"org\":\"VKU\",\n    \"business_field\":\"edu\",\n   \"goal_ids\":[2,6,8,44],\n   \"scale\": \"else\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_coach_members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n    delete_coach_member(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 3\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_my_member",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($user_id:ID!) {\r\n    delete_my_member(\r\n    input: {\r\n      user_id: $user_id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"user_id\": 3\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_coach_members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  coach_member(first:20, page:1) {\r\n    data{\r\n      id\r\n      user{\r\n          id\r\n          name\r\n      }\r\n     org\r\n      business_field\r\n     goal_ids\r\n    teacher_id\r\n      scale\r\n      created_at\r\n      updated_at\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query list_my_coachs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  list_my_coachs{\r\n      id\r\n      user\r\n      {\r\n        id\r\n        name\r\n        email\r\n        phone_number\r\n      }\r\n      goals{\r\n          id\r\n          name\r\n      }\r\n      payments{\r\n          id\r\n          goal{\r\n              id\r\n              name\r\n          }\r\n          status\r\n      }\r\n      created_at\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "detail_coach_members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($user_id: ID!){\r\n  detail_coach_member(\r\n      user_id: $user_id   \r\n    ){\r\n        id\r\n        name\r\n        email\r\n        phone_number\r\n        attachment{\r\n         id\r\n         file\r\n         thumb\r\n        }\r\n        achieves{\r\n            id\r\n            name\r\n        }\r\n       goals{\r\n           id\r\n           name\r\n            posts{\r\n            id\r\n            goal_id\r\n            title\r\n            description\r\n            media\r\n            likes\r\n        }\r\n        diary{\r\n            id\r\n            more\r\n        }\r\n        notes{\r\n            id\r\n            content\r\n        }\r\n       }\r\n    }\r\n}",
								"variables": "{\r\n    \"user_id\": 4\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_goal_owner_coach",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  my_goal_owner_coach{\r\n      id\r\n      goal{\r\n          id\r\n          name\r\n          user{\r\n              id\r\n              name\r\n          }\r\n      }\r\n      coach{\r\n          id\r\n          user{\r\n              id\r\n              name\r\n          }\r\n      }\r\n  }\r\n    \r\n}",
								"variables": "{\r\n\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_list_coach_members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  my_list_coach_members{\r\n      id\r\n      goal{\r\n          id\r\n          name\r\n      }\r\n      user{\r\n          id\r\n          name\r\n          number_member\r\n          count_missing\r\n      }\r\n      created_at\r\n  }\r\n}",
								"variables": "{\r\n    \r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query list_student_members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query(\r\n    $first: Int\r\n    $page: Int\r\n){\r\n  list_student_members(\r\n      first: $first\r\n      page: $page\r\n  ){\r\n      id\r\n      goal{\r\n          id\r\n          name\r\n      }\r\n      user{\r\n          id\r\n          name\r\n          number_member\r\n          count_missing\r\n      }\r\n      created_at\r\n  }\r\n}",
								"variables": "{\r\n    \"first\": 4,\r\n    \"page\": 1\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_list_support_members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  my_list_support_members{\r\n     id\r\n     money\r\n      goal{\r\n          id\r\n          name\r\n          price\r\n      }\r\n      user{\r\n          id\r\n          name\r\n          email\r\n          phone_number\r\n          number_member\r\n         status\r\n         attachments\r\n      }\r\n      created_at\r\n      updated_at\r\n  }\r\n}",
								"variables": "{\r\n\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query list_coach_members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: JSON){\r\n  list_coach_member(    \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {   \r\n    data{\r\n      id\r\n      user\r\n      {\r\n        id\r\n        name\r\n        email\r\n        phone_number\r\n      }\r\n      goals{\r\n          id\r\n          name\r\n      }\r\n      payments{\r\n          id\r\n          goal{\r\n              id\r\n              name\r\n          }\r\n          status\r\n      }\r\n      created_at\r\n    }\r\n    total_page\r\n  }\r\n}",
								"variables": "{ \r\n    \"first\": 100000,\r\n    \"page\": 1,\r\n    \"orderBy\": {\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "japanese_learn",
			"item": [
				{
					"name": "upsert_japanese_learn",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $goal_id : ID\r\n) {\r\n  upsert_japanese_learn(\r\n    input: {\r\n    goal_id:$goal_id\r\n    }\r\n  ) {\r\n   id\r\n    user_id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal_id\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n    \"goal_id\":16380655991\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_japanese_learn",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id: ID!\r\n    $goal_id : ID\r\n) {\r\n  update_japanese_learn(\r\n    input: {\r\n    id:$id\r\n    goal_id:$goal_id\r\n    }\r\n  ) {\r\n   id\r\n    user_id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal_id\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n}\r\n}\r\n",
								"variables": "{\r\n    \"id\":7,\r\n    \"goal_id\":2\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_japanese_learn",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  delete_japanese_learn(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 3\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_ japanese_learn",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\r\n  detail_japanese_learn(\r\n      id: $id  \r\n    ) {\r\n       id\r\n    user_id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal_id\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    goal_no_childs{\r\n        id\r\n        parent{\r\n            id\r\n        }\r\n        name\r\n    }\r\n    created_at\r\n    updated_at\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"id\": 1\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_japanese_learn",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  japanese_learn(first:200, page:1) {\r\n    data {\r\n    id\r\n    user{\r\n        id\r\n        name\r\n        email\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    created_at\r\n    updated_at\r\n  }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_japanese_learn",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_japanese_learn(   \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n      id\r\n      user{\r\n          id\r\n          name\r\n      }\r\n      goal{\r\n          id\r\n          name\r\n      }\r\n      created_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n\r\n",
								"variables": "{\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_japanese_learn",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "  query{\r\n  my_japanese_learn{\r\n     id\r\n    user_id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal_id\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "japanese_kanji",
			"item": [
				{
					"name": "upsert_japanese_kanji",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id:ID\r\n    $name: String\r\n    $more: JSON\r\n) {\r\n upsert_japanese_kanji(\r\n    input: {\r\n    id:$id\r\n    name: $name\r\n    more: $more\r\n    }\r\n  ) {\r\n   id\r\n    user_id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n   more\r\n   created_at\r\n   updated_at\r\n }\r\n}\r\n",
								"variables": "{\r\n\"id\":1878,\r\n\"name\": \"ケ\",\r\n\"more\": {\r\n        \"meaning\": \"hihi\",\r\n        \"onyomi\": \"NULL\",\r\n        \"kunyomi\": \"NULL\",\r\n        \"img\": \"https://nihongoichibandotcom.files.wordpress.com/2011/03/kak.gif?w=610\"\r\n                }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_japanese_kanji",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id: ID!\r\n    $name: String\r\n    $more: JSON\r\n) {\r\n update_japanese_kanji(\r\n    input: {\r\n    id: $id\r\n    name: $name\r\n    more: $more\r\n    }\r\n  ) {\r\n   id\r\n    user_id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    name\r\n   more\r\n   created_at\r\n   updated_at\r\n }\r\n}\r\n",
								"variables": "{\r\n    \"id\":5,\r\n    \"name\":\"一\",\r\n    \"more\": {\r\n        \"strokes\":\"1\",\r\n        \"set\": \"some thing\",\r\n        \"han_viet\":\"nhất\",\r\n        \"example\": {\r\n            \"text\":\"ban la nhat\",\r\n            \"audio\":{\r\n                \"attachment_id\": 1,\r\n                \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"}\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_japanese_learn",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  delete_japanese_kanji(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 1\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_ japanese_kanji",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\r\n  detail_japanese_kanji(\r\n      id: $id  \r\n    ) {\r\n       id\r\n    user_id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    name\r\n    more\r\n    created_at\r\n    updated_at\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"id\": 1\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query list_ japanese_kanji",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($ids: [ID]){\r\n  list_japanese_kanji(\r\n      ids: $ids  \r\n    ) {\r\n       id\r\n    user_id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    name\r\n    more\r\n    created_at\r\n    updated_at\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"ids\": [\r\n    \"4655\",\r\n    \"4658\",\r\n    \"4656\"\r\n    ]\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query vocabulary_ japanese_kanji",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  vocabulary_japanese_kanji{\r\n    id\r\n    user_id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    name\r\n    more\r\n    created_at\r\n    updated_at\r\n  }\r\n}\r\n",
								"variables": "{\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_japanese_kanji",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  japanese_kanji(first:200, page:1) {\r\n    data {\r\n    id\r\n    user{\r\n        id\r\n        name\r\n        email\r\n    }\r\n    name\r\n    more\r\n    created_at\r\n    updated_at\r\n  }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_japanese_kanji",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_japanese_kanji(   \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n      id\r\n      user{\r\n          id\r\n          name\r\n      }\r\n     name\r\n     more\r\n      created_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n\r\n",
								"variables": "{\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_japanese_kanji",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "  query{\r\n  my_japanese_kanji{\r\n     id\r\n    user_id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n   name\r\n   more\r\n  }\r\n}",
								"variables": "{\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "japanese_posts",
			"item": [
				{
					"name": "create_japanese_posts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $goal_id : ID\r\n    $title: String\r\n    $description: String\r\n    $media: JSON\r\n    $likes: JSON\r\n) {\r\n  create_japanese_posts(\r\n    input: {\r\n        goal_id:$goal_id\r\n        title:$title\r\n        description:$description\r\n        media:$media\r\n        likes:$likes\r\n    }\r\n  ) {\r\n   id\r\n    user_id\r\n    goal_id\r\n    title\r\n    description\r\n    media\r\n    likes\r\n    created_at\r\n    updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n  \"goal_id\": 18,\r\n  \"title\": \"Trứng chiên nước mắm\",\r\n  \"description\": \"Với nguyên liệu và cách làm đơn giản, bạn có thể tạo nên một món ăn thưởng thức cùng cơm trắng cho ngày cuối tuần.\",\r\n  \"media\": {\r\n    \"radioKey\": \"Audio\",\r\n    \"file\": \"http://japanese-dev-be.test/storage/media/audios/2021-08-27-1630055113-356968074-10.mp3\",\r\n    \"file_type\": \"audio\",\r\n    \"thumb\": \"http://japanese-dev-be.test/storage/media/audios/2021-08-27-1630055113-356968074-10.mp3\"\r\n  },\r\n  \"likes\": [\r\n    1,\r\n    2,\r\n    3\r\n  ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_japanese_posts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id:ID\r\n    $goal_id : ID\r\n    $title: String\r\n    $description: String\r\n    $media: JSON\r\n    $likes: JSON\r\n) {\r\n  update_japanese_posts(\r\n    input: {\r\n        id:$id\r\n        goal_id:$goal_id\r\n        title:$title\r\n        description:$description\r\n        media:$media\r\n        likes:$likes\r\n    }\r\n  ) {\r\n   id\r\n    user_id\r\n    goal_id\r\n    title\r\n    description\r\n    media\r\n    likes\r\n    created_at\r\n    updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n  \"id\":6,\r\n  \"goal_id\": \"5\",\r\n  \"title\": \"cửu âm chân kinh\",\r\n  \"description\": \"Với nguyên liệu và cách làm đơn giản, bạn có thể tạo nên một món ăn thưởng thức cùng cơm trắng cho ngày cuối tuần.\",\r\n  \"media\": {\r\n    \"radioKey\": \"Audio\",\r\n    \"file\": \"http://japanese-dev-be.test/storage/media/audios/2021-08-27-1630055113-356968074-10.mp3\",\r\n    \"file_type\": \"audio\",\r\n    \"thumb\": \"http://japanese-dev-be.test/storage/media/audios/2021-08-27-1630055113-356968074-10.mp3\"\r\n  },\r\n  \"likes\": [\r\n    1,\r\n    2,\r\n    4\r\n  ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_japanese_posts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  delete_japanese_posts(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 3\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_ japanese_posts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID, $goal_id:ID){\r\n  detail_japanese_posts(\r\n      id: $id  \r\n      goal_id: $goal_id\r\n    )\r\n    {\r\n   id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    title\r\n    description\r\n    media\r\n    likes\r\n    created_at\r\n    updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n    \"goal_id\": 2\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_japanese_posts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  japanese_posts(first:200, page:1) {\r\n    data {\r\n   id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    title\r\n    description\r\n    media\r\n    likes\r\n    created_at\r\n    updated_at\r\n}\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_japanese_posts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_japanese_posts(   \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n     id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    title\r\n    description\r\n    media\r\n    likes\r\n    created_at\r\n    updated_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n\r\n",
								"variables": "{\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_japanese_posts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "  query{\r\n  my_japanese_posts{\r\n     id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    title\r\n    description\r\n    media\r\n    likes\r\n  }\r\n}",
								"variables": "{\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query other_japanese_posts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($goal_id: ID){\r\n    other_japanese_posts(\r\n      goal_id: $goal_id  \r\n    ){\r\n     id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    title\r\n    description\r\n    media\r\n    likes\r\n  }\r\n}",
								"variables": "{\r\n    \"goal_id\":3\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "goal_scores",
			"item": [
				{
					"name": "upsert_goal_score",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $goal_id : ID\r\n    $scores: JSON\r\n) {\r\n  upsert_goal_score(\r\n    input: {\r\n        goal_id:$goal_id\r\n        scores:$scores\r\n    }\r\n  ) {\r\n   id\r\n    user_id\r\n    goal_id\r\n    scores\r\n    created_at\r\n    updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n  \"goal_id\": 16397065336,\r\n  \"scores\": {\r\n    \"1\":9,\r\n    \"2\":5,\r\n    \"5\":3\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_goal_score",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id: ID!\r\n    $goal_id : ID\r\n    $scores: JSON\r\n) {\r\n  update_goal_score(\r\n    input: {\r\n        id: $id\r\n        goal_id:$goal_id\r\n        scores:$scores\r\n    }\r\n  ) {\r\n   id\r\n    user_id\r\n    goal_id\r\n    scores\r\n    created_at\r\n    updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n  \"id\": 2,\r\n  \"goal_id\": 1,\r\n  \"scores\": {\r\n    \"1\":9,\r\n    \"2\":5,\r\n    \"5\":3\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_goal_score",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  delete_goal_score(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 2\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_goal_score",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID, $goal_id:ID){\r\n  detail_goal_score(\r\n      id: $id  \r\n      goal_id: $goal_id\r\n    )\r\n    {\r\n   id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    scores\r\n    created_at\r\n    updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n    \"goal_id\": 1\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_goal_score",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  goal_score(first:200, page:1) {\r\n    data {\r\n   id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    scores\r\n    created_at\r\n    updated_at\r\n}\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_goal_score",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_goal_score(   \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n     id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    scores\r\n    created_at\r\n    updated_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n\r\n",
								"variables": "{\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_goal_score",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "  query{\r\n  my_goal_score{\r\n     id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    scores\r\n  }\r\n}",
								"variables": "{\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "goal_templates",
			"item": [
				{
					"name": "create_goal_templates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $goal_id : ID\r\n    $status: String   \r\n    $sell_goal: String\r\n    $request: String\r\n) {\r\n  create_goal_template(\r\n    input: {\r\n        goal_id:$goal_id\r\n        status:$status\r\n        request:$request\r\n        sell_goal: $sell_goal\r\n    }\r\n  ) {\r\n    id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    sell_goal\r\n    status\r\n    request\r\n    created_at\r\n    updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n  \"goal_id\": 16407503085,\r\n  \"status\": \"Inviting\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_goal_template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id:ID!\r\n    $goal_id : ID\r\n    $status: String   \r\n    $request: String\r\n    $sell_goal: String\r\n) {\r\n  update_goal_template(\r\n    input: {\r\n        id: $id\r\n        goal_id:$goal_id\r\n        status:$status\r\n        request:$request\r\n        sell_goal: $sell_goal\r\n    }\r\n  ) {\r\n    id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    sell_goal\r\n    status\r\n    request\r\n    created_at\r\n    updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n    \"id\": 1,\r\n    \"goal_id\": 1,\r\n    \"sell_goal\":\"90000\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_goal_template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  delete_goal_template(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 2\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_goal_templates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID, $goal_id:ID){\r\n  detail_goal_template(\r\n      id: $id  \r\n      goal_id: $goal_id\r\n    )\r\n    {\r\n   id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    members{\r\n        id\r\n        name\r\n    }\r\n    sell_goal\r\n    status\r\n    request\r\n    created_at\r\n    updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n    \"goal_id\": 40\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_goal_templates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  goal_template(first:200, page:1) {\r\n    data {\r\n   id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    status\r\n    sell_goal\r\n    request\r\n    created_at\r\n    updated_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_list_goal_templates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query(\r\n    $status: String\r\n) {\r\n  list_goal_templates(\r\n      status: $status\r\n  ) {\r\n   id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n        user{\r\n            id\r\n            name\r\n        }\r\n        sum_achieve_share\r\n        price\r\n        user{\r\n            id\r\n            name\r\n        }\r\n        general_info {\r\n            id\r\n            attachments {\r\n                file\r\n                file_type\r\n                thumb\r\n            }\r\n    }\r\n    }\r\n    status\r\n    sell_goal\r\n    number_member\r\n    member_percent\r\n    number_buy_on\r\n    buy_on_percent\r\n    number_paid\r\n    paid_percent\r\n    number_trials\r\n    trials_percent\r\n    number_end_trial\r\n    number_done\r\n    done_percent\r\n    request\r\n    checked_time\r\n    created_at\r\n    updated_at\r\n    }\r\n}",
								"variables": "{\r\n    \"status\":\"all\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_list_goal_potential",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query(\r\n    $number_potential: Int\r\n) {\r\n  list_goal_potential(\r\n      number_potential: $number_potential\r\n  ) {\r\n   id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    name\r\n    sum_achieve_share\r\n    status\r\n    }\r\n}",
								"variables": "{\r\n    \"number_potential\": 2\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_goal_templates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_goal_template(   \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n     id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n        user{\r\n            id\r\n            name\r\n        }\r\n    }\r\n    status\r\n    sell_goal\r\n    request\r\n    created_at\r\n    updated_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n\r\n",
								"variables": "{\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_goal_templates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "  query(\r\n      $status: String\r\n  ){\r\n  my_goal_template(\r\n      status: $status\r\n  ){\r\n     id\r\n    goal{\r\n        id\r\n        name\r\n        user{\r\n            id\r\n            name\r\n        }\r\n        price\r\n        created_at\r\n    }\r\n    status\r\n    sell_goal\r\n    sum_price\r\n    checked_time\r\n    number_member\r\n    number_buy_on\r\n    number_paid\r\n    number_trials\r\n    number_done\r\n  }\r\n}",
								"variables": "{\r\n   \"status\": \"all\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_goal_templates _unpaid",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "  query{\r\n  my_goal_template_unpaid{\r\n     id\r\n     name\r\n  }\r\n}",
								"variables": "{\r\n   \r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "notification",
			"item": [
				{
					"name": "create_notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $user_receive_id : ID\r\n    $type : String\r\n    $type_id : ID\r\n    $content: JSON\r\n    $is_read : Boolean\r\n) {\r\n  create_notification(\r\n    input: {\r\n    user_receive_id : $user_receive_id\r\n    type : $type\r\n    type_id : $type_id\r\n    content: $content\r\n    is_read : $is_read\r\n    }\r\n  ) {\r\n   id\r\n        user{\r\n            id\r\n        }\r\n        content\r\n        \r\n        created_at\r\n        updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n    \"user_receive_id\" : 120,\r\n    \"type\" : \"share_user_info\",\r\n    \"type_id\" : null,\r\n    \"content\": {\r\n        \"title\":\"invite\",\r\n        \"message\" : \"come on man\"\r\n    },\r\n    \"is_read\" : false\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_invite_any",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $type : String\r\n    $type_id : ID\r\n    $content: JSON\r\n) {\r\n  create_invite_any(\r\n    input: {\r\n    type : $type\r\n    type_id : $type_id\r\n    content: $content\r\n    }\r\n  ) {\r\n   id\r\n        user{\r\n            id\r\n        }\r\n        content\r\n        \r\n        created_at\r\n        updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n    \"type\" : \"sing_with_friend\",\r\n    \"type_id\" : 1,\r\n    \"content\": {\r\n        \"title\":\"invite\",\r\n        \"message\" : \"sing with me\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_invite_friend",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $type : String\r\n    $type_id : ID\r\n    $content: JSON\r\n) {\r\n  create_invite_friend(\r\n    input: {\r\n    type : $type\r\n    type_id : $type_id\r\n    content: $content\r\n    }\r\n  ) {\r\n   id\r\n        user{\r\n            id\r\n        }\r\n        content\r\n        \r\n        created_at\r\n        updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n    \"type\" : \"sing_with_friend\",\r\n    \"type_id\" : 1589,\r\n    \"content\": {\r\n        \"title\":\"invite\",\r\n        \"message\" : \"sing with me\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_invite_any_pass",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $type : String\r\n    $type_id : ID\r\n    $content: JSON\r\n) {\r\n  create_invite_any_pass(\r\n    input: {\r\n    type : $type\r\n    type_id : $type_id\r\n    content: $content\r\n    }\r\n  ) {\r\n   id\r\n        user{\r\n            id\r\n        }\r\n        content\r\n        \r\n        created_at\r\n        updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n    \"type\" : \"sing_with_friend\",\r\n    \"type_id\" : 1,\r\n    \"content\": {\r\n        \"title\":\"invite\",\r\n        \"message\" : \"sing with me\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_share_user_notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $user_receive_ids : [ID]\r\n    $type : String\r\n    $type_id : ID\r\n    $content: JSON\r\n    $is_read : Boolean\r\n) {\r\n  create_notification(\r\n    input: {\r\n    user_receive_ids : $user_receive_ids\r\n    type : $type\r\n    type_id : $type_id\r\n    content: $content\r\n    is_read : $is_read\r\n    }\r\n  ) {\r\n   id\r\n        user{\r\n            id\r\n        }\r\n       content\r\n        \r\n        created_at\r\n        updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n    \"user_receive_ids\" : [1,2,3],\r\n    \"type\" : \"share_user_info\",\r\n    \"content\": {\r\n        \"title\":\"share user info\",\r\n        \"message\" : \"visit my profile\"\r\n    },\r\n    \"is_read\" : false\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id : ID!\r\n    $user_receive_id : ID\r\n    $type : String\r\n    $type_id : ID\r\n    $content: JSON\r\n    $is_read : Boolean\r\n) {\r\n  update_notification(\r\n    input: {\r\n        id : $id\r\n    user_receive_id : $user_receive_id\r\n    type : $type\r\n    type_id : $type_id\r\n    content: $content\r\n    is_read : $is_read\r\n    }\r\n  ) {\r\n    id\r\n    user{\r\n        id\r\n    }\r\n    user_receive{\r\n        id\r\n    }\r\n    type\r\n    type_id\r\n    content\r\n    is_read\r\n    created_at\r\n    updated_at\r\n}\r\n}\r\n",
								"variables": "{\r\n    \"id\":3,\r\n    \"user_receive_id\" : 2,\r\n    \"type\" : \"todolist\",\r\n    \"type_id\" : 2,\r\n    \"content\": {\r\n        \"title\" : \"hihi vui ghe\",\r\n        \"content\" : \"Cung nhau OT\"\r\n    },\r\n    \"is_read\" : true\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $type: String\r\n    $type_id:ID\r\n    ) {\r\n  delete_notification(\r\n    input: {\r\n      type: $type\r\n      type_id: $type_id \r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"type\": \"sing_with_friend\",\r\n    \"type_id\":6\r\n\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "search_notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($type:String) {\r\n  notification_by_type(\r\n      type: $type\r\n  ){\r\n id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    user_receive{\r\n        id\r\n        name\r\n    }\r\n    general_info{\r\n        id\r\n        attachments{\r\n            thumb\r\n        }\r\n\r\n    }\r\n    type\r\n    type_id\r\n    content\r\n    is_read\r\n    created_at\r\n    updated_at\r\n  }\r\n}",
								"variables": "{\r\n    \"type\": \"todolist\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  notifications(first:22, page:1) {\r\n    data {\r\n    id\r\n    user{\r\n        id\r\n        name\r\n        email\r\n    }\r\n    content\r\n    created_at\r\n    updated_at\r\n  }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_notifications(\r\n      \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n      id\r\n      user{\r\n          id\r\n          name\r\n      }\r\n      content\r\n      created_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n\r\n",
								"variables": "{\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_ notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\r\n  detail_notification(\r\n      id: $id\r\n     \r\n    ) {\r\n        id\r\n        user{\r\n            id\r\n        }\r\n        detail\r\n        member{\r\n            id\r\n            name\r\n            process\r\n            attachment{\r\n                thumb\r\n            }\r\n        }\r\n    }\r\n}\r\n",
								"variables": "{\r\n    \"id\": 9\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "  query($types: [String]!){\r\n  my_notifications(\r\n      types: $types\r\n  ){\r\n    id\r\n    user_share_by\r\n    user{\r\n        id\r\n        name\r\n        attachment{\r\n            file_type\r\n            thumb\r\n            file\r\n        }\r\n    }\r\n    type\r\n    type_id\r\n    messages\r\n    created_at\r\n    updated_at\r\n  }\r\n}",
								"variables": "{\r\n    \"types\":[\"goal_to_template\"]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "japanese_goals",
			"item": [
				{
					"name": "create_japanese_goals",
					"item": [
						{
							"name": "create_communication_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $id: ID\n    $parent_id: ID\n    $root_id: ID\n    $name_goal: String\n    $type : String\n    $more : JSON\n    )\n{\n  upsert_japanese_goals(\n    input: \n    {\n    id: $id\n    parent_id: $parent_id \n    name_goal: $name_goal\n    root_id:$root_id\n    type : $type\n    more : $more\n    }) {\n        id\n        goal_id,\n        goal{\n            id,\n            name,\n            parent{\n                id\n                name\n            }\n        }\n        type,\n        more\n    }\n  \n}",
										"variables": "{\n  \"name_goal\": \"Quo eius culpa 2313\",\n  \"each_score\": 23,\n  \"total_score\": 23,\n  \"type\": \"sing_with_friend\",\n  \"id\": \"3\",\n  \"root_id\": \"1\",\n  \"more\": {\n    \"name\": \"1\",\n    \"author\": \"2\",\n    \"singer\": \"Quod obcaecati tempo\",\n    \"youtube\": \"https://www.youtube.com/watch?v=-Xaw5MkvQWU\",\n    \"lyrics\": [\n      {\n        \"audio\": {\n          \"radioKey\": \"Audio\"\n        },\n        \"wordsJP\": \"Officiis anim in con\",\n        \"wordsVN\": \"Iste ut in quaerat e\"\n      }\n    ]\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_watch_video_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $parent_id: ID\n    $name_goal: String\n    $type : String\n    $more : JSON\n    $score : Float\n    )\n{\n  create_japanese_goals(\n    input: \n    {\n    parent_id: $parent_id \n    name_goal: $name_goal\n    type : $type\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        goal{\n            id,\n            name,\n            parent{\n                id\n                name\n            }\n        }\n        type,\n        more\n    }\n  \n}",
										"variables": "{\n     \"parent_id\":16380654667,\n  \"name_goal\": \"learn japanese\",\n  \"type\": \"watch_video\",\n  \"more\": {\n    \"video\": {\n      \"attachment_id\": 1,\n      \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n    },\n    \"video_skit\": {\n      \"attachment_id\": 1,\n      \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n    },\n    \"table\": [\n      {\n        \"character_name\": \"Nam Hoai\",\n        \"audio\": {\n          \"attachment_id\": 1,\n          \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n        },\n        \"content\": \"はじめまして!\\n始めまして!\\nHajimemashite!Rất hân hạn được làm quen với anh/chị/bạn!\"\n      },\n      {\n        \"character_name\": \"Nam Hoai\",\n        \"audio\": {\n          \"attachment_id\": 1,\n          \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n        },\n        \"content\": \"はじめまして!\\n始めまして!\\nHajimemashite!Rất hân hạn được làm quen với anh/chị/bạn!\"\n      }\n    ]\n  },\n  \"score\": 8.3\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_vocabulary_grammar_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $parent_id: ID\n    $name_goal: String\n    $type : String\n    $more : JSON\n    $score : Float\n    )\n{\n  create_japanese_goals(\n    input: \n    {\n    parent_id: $parent_id \n    name_goal: $name_goal\n    type : $type\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        goal{\n            id,\n            name,\n            parent{\n                id\n                name\n            }\n        }\n        type,\n        more\n    }\n  \n}",
										"variables": "{\n     \"parent_id\":2,\n    \"name_goal\":\"Let go\",\n    \"type\" : \"vocabulary_grammar\",\n    \"more\" : [\n        {\n        \"content\":\"こにちわみなさん\",\n        \"image\": \n        {\n        \"attachment_id\": 1,\n        \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"}, \n        \"video\":\n         {\n             \"attachment_id\": 1,\n             \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n            }\n       }\n    ],\n    \"score\" : 8.3\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_alphabet_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $parent_id: ID\n    $name_goal: String\n    $type : String\n    $more : JSON\n    $score : Float\n    )\n{\n  create_japanese_goals(\n    input: \n    {\n    parent_id: $parent_id \n    name_goal: $name_goal\n    type : $type\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        goal{\n            id,\n            name,\n            parent{\n                id\n                name\n            }\n        }\n        type,\n        more\n    }\n  \n}",
										"variables": "{\n     \"parent_id\":3,\n    \"name_goal\":\"learn english\",\n    \"type\" : \"alphabet\",\n    \"more\" : [\n    {\n        \"content_1\": \"こにちわ\",\n        \"content_2\": \"おｈしよ\",\n        \"content_3\": \"こんばわ\",\n        \"image\": \n        {\n            \"attachment_id\": 1,\n            \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n        },\n        \n        \"audio\": \n        {\n            \"attachment_id\": 2,\n            \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n        },\n        \"video\": \n        {\n            \"attachment_id\": 3,\n            \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n        }\n    }\n],\n    \"score\" : 2.3\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_flash_card_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $parent_id: ID\n    $name_goal: String\n    $type : String\n    $more : JSON\n    $score : Float\n    )\n{\n  create_japanese_goals(\n    input: \n    {\n    parent_id: $parent_id \n    name_goal: $name_goal\n    type : $type\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        goal{\n            id,\n            name,\n            parent{\n                id\n                name\n            }\n        }\n        type,\n        more\n    }\n  \n}",
										"variables": "{\n    \"type\": \"flashcard\",\n    \"more\": {\n        \"name\": \"hihi\",\n        \"flashcard_category\": \"Nhà cửa\",\n          \"media\": {\n            \"radioKey\": \"Record\",\n            \"user_id\": 19,\n            \"file\": \"https://jp-be.ppe.edu.vn/storage/media/audios/2021-08-27-1630051494-1584616874-19.mp3\",\n            \"file_type\": \"audio\",\n            \"file_name\": \"2021-08-27-1630051494-1584616874-19.mp3\",\n            \"file_size\": 393298,\n            \"updated_at\": \"2021-08-27T08:04:54.000000Z\",\n            \"created_at\": \"2021-08-27T08:04:54.000000Z\",\n            \"id\": 2291,\n            \"thumb\": \"https://jp-be.ppe.edu.vn/storage/media/audios/2021-08-27-1630051494-1584616874-19.mp3\"\n          }\n      },\n      \"score\":8.7\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "upsert_flash_card_category_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $parent_id: ID\n    $name_goal: String\n    $type : String\n    $more : JSON\n    $score : Float\n    )\n{\n  create_japanese_goals(\n    input: \n    {\n    parent_id: $parent_id \n    name_goal: $name_goal\n    type : $type\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        goal{\n            id,\n            name,\n            parent{\n                id\n                name\n            }\n        }\n        type,\n        more\n    }\n  \n}",
										"variables": "{\n  \"type\": \"flashcard_category\",\n  \"more\": [\n    \"Nhà cửa\",\n    \"Động vật\",\n    \"Xe hơi\",\n    \"Thiên nhiên\",\n    \"Đồ vật\"\n  ]\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_flash_card_study_japanese_goals Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $parent_id: ID\n    $name_goal: String\n    $type : String\n    $more : JSON\n    $score : Float\n    )\n{\n  create_japanese_goals(\n    input: \n    {\n    parent_id: $parent_id \n    name_goal: $name_goal\n    type : $type\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        goal{\n            id,\n            name,\n            parent{\n                id\n                name\n            }\n        }\n        type,\n        more\n    }\n  \n}",
										"variables": "{\n  \"type\": \"flashcard_study\",\n  \"name_goal\": \"Bài học\",\n  \"parent_id\": 1,\n  \"more\": {\n    \"flashcard_ids\": [\n     34\n    ]\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_basket_card_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $parent_id: ID\n    $name_goal: String\n    $type : String\n    $more : JSON\n    $score : Float\n    )\n{\n  create_japanese_goals(\n    input: \n    {\n    parent_id: $parent_id \n    name_goal: $name_goal\n    type : $type\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        goal{\n            id,\n            name,\n            parent{\n                id\n                name\n            }\n        }\n        type,\n        more\n    }\n  \n}",
										"variables": "{\n    \"parent_id\":1,\n    \"type\": \"basket_card\",\n    \"more\": [\n      {\n        \"name\": \"giỏ card về ẩm thực\",\n        \"image\": {\n          \"attachment_id\": 1,\n          \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n        }\n      },\n      {\n        \"name\": \"giỏ card về du lịch\",\n        \"image\": {\n          \"attachment_id\": 1,\n          \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n        }\n      }\n    ]\n  }"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_share_card_with_friend_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $parent_id: ID\n    $name_goal: String\n    $type : String\n    $more : JSON\n    $score : Float\n    )\n{\n  create_japanese_goals(\n    input: \n    {\n    parent_id: $parent_id \n    name_goal: $name_goal\n    type : $type\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        goal{\n            id,\n            name,\n            parent{\n                id\n                name\n            }\n        }\n        type,\n        more\n    }\n  \n}",
										"variables": "{\n    \"type\": \"share_card_with_friend\",\n    \"more\": {\n      \"user_invite_ids\": [\n        1,\n        2,\n        3\n      ],\n      \"basket_card\": {\n        \"name\": \"giỏ card về ẩm thực\",\n        \"image\": {\n          \"attachment_id\": 1,\n          \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n        }\n      },\n      \"flash_card\": [\n        {\n          \"front\": {\n            \"name\": \"食べます\",\n            \" image\": {\n              \"attachment_id\": 1,\n              \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n            },\n            \" audio\": {\n              \"attachment_id\": 1,\n              \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n            },\n            \" video\": {\n              \"attachment_id\": 1,\n              \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n            }\n          },\n          \"back\": {\n            \"name\": \"ăn\",\n            \" image\": {\n              \"attachment_id\": 1,\n              \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n            },\n            \" audio\": {\n              \"attachment_id\": 1,\n              \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n            },\n            \" video\": {\n              \"attachment_id\": 1,\n              \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n            }\n          }\n        },\n        {\n          \"front\": {\n            \"name\": \"飲みます\",\n            \" image\": {\n              \"attachment_id\": 1,\n              \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n            },\n            \" audio\": {\n              \"attachment_id\": 1,\n              \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n            },\n            \" video\": {\n              \"attachment_id\": 1,\n              \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n            }\n          },\n          \"back\": {\n            \"name\": \"uống\",\n            \" image\": {\n              \"attachment_id\": 1,\n              \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n            },\n            \" audio\": {\n              \"attachment_id\": 1,\n              \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n            },\n            \" video\": {\n              \"attachment_id\": 1,\n              \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n            }\n          }\n        }\n      ]\n    }\n  }"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_diary_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $type : String\n    $more : JSON\n    $score : Float\n    $name_goal: String\n    $root_id: ID\n    )\n{\n  create_japanese_goals(\n    input: \n    {\n    type : $type\n    root_id: $root_id\n    name_goal:$name_goal\n    more : $more\n    score : $score\n    }) {\n        id\n         goal_id,\n        goal{\n            id,\n            name,\n            parent{\n                id\n                name\n            }\n        }\n        type,\n        more\n    }\n  \n}",
										"variables": "{\n    \"name_goal\":\"hoc bai haha\",\n    \"type\" : \"diary\",\n    \"more\" : [\n        {\n         \"date\": \"2021-08-04\",\n         \"user_invite_ids\":[1,3,6],\n         \"content\":\"hom nay toi buon\"\n        }\n    ],\n    \"root_id\": 1\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_make_video_share_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    \n    $type : String\n    $more : JSON\n    $score : Float\n    )\n{\n  create_japanese_goals(\n    input: \n    {\n    type : $type\n    more : $more\n    score : $score\n    }) {\n        id\n        type,\n        more\n    }\n  \n}",
										"variables": "{\n  \"type\": \"make_video_share\",\n  \"more\": {\n    \"user_invite_ids\": [\n      1,\n      2,\n      3\n    ],\n    \"name\": \"Chiều nay đá cầu uống nước mía FREE\",\n    \"video\": {\n      \"attachment_id\": 1,\n      \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n    },\n    \"content\": [\n      {\n        \"title\": \"Tình huống\",\n        \"description\": \"Đá cầu là môn thể thao nhẹ nhàng được nhiều người ưa chuộng. Đá cầu bắt nguồn từ Trung Quốc và hiện nay đã phổ biến ở nhiều quốc gia. Tuy nhiên môn đá cầu tiếng anh là gì vẫn là câu hỏi thắc mắc của nhiều người.\"\n      },\n      {\n        \"title\": \"Ý nghĩa\",\n        \"description\": \"Đá cầu là môn thể thao nhẹ nhàng được nhiều người ưa chuộng. Đá cầu bắt nguồn từ Trung Quốc và hiện nay đã phổ biến ở nhiều quốc gia. Tuy nhiên môn đá cầu tiếng anh là gì vẫn là câu hỏi thắc mắc của nhiều người.\"\n      },\n      {\n        \"title\": \"Nhân vật\",\n        \"description\": \"Sĩ, Khoa, Tiến, Phi, Chị Phương\"\n      },\n      {\n        \"title\": \"Nội dung chi tiết\",\n        \"description\": \"Đá cầu giải trí là hình thức đá cầu tự phát không có sự ràng buộc. Thông thường có thể có từ 1-2 người hoặc hơn chơi đá cầu để rèn luyện sức khỏe và giải trí. Đây là loại hình không có quy luật cụ thể mà chủ yếu là quy định của những người chơi. Cách chơi vẫn theo sự thống nhất không được dùng tay tâng cầu và không được tiếp đất.\"\n      }\n    ],\n    \"sub\": [\n      {\n        \"name\": \"Engsub\",\n        \"list\": [\n          {\n            \"time_at\": \"05:00\",\n            \"content\": \"Sure, I’ll send you an e-mail. See you soon!もちろん。メールを送ります。では、また会いましょう！Mochiron. Meeru wo okurimasu. Dewa mata aimashou\"\n          },\n          {\n            \"time_at\": \"05:00\",\n            \"content\": \"Sure, I’ll send you an e-mail. See you soon!もちろん。メールを送ります。では、また会いましょう！Mochiron. Meeru wo okurimasu. Dewa mata aimashou\"\n          },\n          {\n            \"time_at\": \"05:00\",\n            \"content\": \"Sure, I’ll send you an e-mail. See you soon!もちろん。メールを送ります。では、また会いましょう！Mochiron. Meeru wo okurimasu. Dewa mata aimashou\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Engsub\",\n        \"list\": [\n          {\n            \"time_at\": \"05:00\",\n            \"content\": \"Sure, I’ll send you an e-mail. See you soon!もちろん。メールを送ります。では、また会いましょう！Mochiron. Meeru wo okurimasu. Dewa mata aimashou\"\n          },\n          {\n            \"time_at\": \"05:00\",\n            \"content\": \"Sure, I’ll send you an e-mail. See you soon!もちろん。メールを送ります。では、また会いましょう！Mochiron. Meeru wo okurimasu. Dewa mata aimashou\"\n          },\n          {\n            \"time_at\": \"05:00\",\n            \"content\": \"Sure, I’ll send you an e-mail. See you soon!もちろん。メールを送ります。では、また会いましょう！Mochiron. Meeru wo okurimasu. Dewa mata aimashou\"\n          }\n        ]\n      }\n    ]\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_sing_with_friend",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $parent_id: ID\n    $name_goal: String\n    $type : String\n    $more : JSON\n    )\n{\n  create_japanese_goals(\n    input: \n    {\n    parent_id:$parent_id\n    name_goal:$name_goal\n    type : $type\n    more : $more\n    }) {\n        id\n        goal_id\n        goal{\n            id\n            name\n        }\n        type,\n        more\n    }\n  \n}",
										"variables": "  {\n    \"name_goal\":\"hat\",\n    \"type\": \"sing_with_friend\",\n    \"more\": {\n      \"user_invite_ids\": [\n        \n      ],\n      \"name\": \"Học hát: Sakura\",\n      \"video\": {\n        \"attachment_id\": 1,\n        \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp4\"\n      },\n      \"lyrics\": [\n        {\n          \"words\": \"夜中過ぎの夢に うなされて\",\n          \"audio\": {\n            \"attachment_id\": 1,\n            \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n          }\n        },\n        {\n          \"words\": \"夜中過ぎの夢に うなされて\",\n          \"audio\": {\n            \"attachment_id\": 1,\n            \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n          }\n        },\n        {\n          \"words\": \"夜中過ぎの夢に うなされて\",\n          \"audio\": {\n            \"attachment_id\": 1,\n            \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n          }\n        }\n      ]\n    }\n  }"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_post_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $parent_id: ID\n    $name_goal: String\n    $type : String\n    $more : JSON\n    $score : Float\n    )\n{\n  create_japanese_goals(\n    input: \n    {\n    parent_id: $parent_id\n    name_goal:$name_goal\n    type : $type\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        goal{\n            id,\n            name,\n            parent{\n                id\n                name\n            }\n        }\n        type,\n        more\n    }\n  \n}",
										"variables": "{ \n \"parent_id\": 1,\n \"name_goal\": \"hello\",\n  \"type\": \"post\",\n  \"more\": {\n    \"name\": \"Video hướng dẫn nấu ăn bằng tiếng Nhật\",\n    \"video\": {\n      \"attachment_id\": 1,\n      \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.jpg\"\n    },\n    \"conversations\": [\n      {\n        \"actor\": \"Tien さん\",\n        \"content\": \"Sure, I’ll send you an e-mail. See you soon!もちろん。メールを送ります。では、また会いましょう！Mochiron. Meeru wo okurimasu. Dewa mata aimashou\"\n      },\n      {\n        \"actor\": \"Tien さん\",\n        \"content\": \"Sure, I’ll send you an e-mail. See you soon!もちろん。メールを送ります。では、また会いましょう！Mochiron. Meeru wo okurimasu. Dewa mata aimashou\"\n      },\n      {\n        \"actor\": \"Tien さん\",\n        \"content\": \"Sure, I’ll send you an e-mail. See you soon!もちろん。メールを送ります。では、また会いましょう！Mochiron. Meeru wo okurimasu. Dewa mata aimashou\"\n      }\n    ]\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "update_japanese_goals",
					"item": [
						{
							"name": "update_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $id : ID\n    $goal_id : ID\n    $more : JSON\n    $score : Float\n    )\n{\n  update_japanese_goals(\n    input: \n    {\n        id: $id\n    goal_id : $goal_id\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        type\n        score,\n        more\n\n    }\n  \n}",
										"variables": "{\n\"id\": 28,\n  \"more\": {\n    \"video\": {\n      \"attachment_id\": 2,\n      \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n    },\n    \"video_skit\": {\n      \"attachment_id\": 1,\n      \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n    },\n    \"table\": [\n      {\n        \"character_name\": \"Nam Hoai\",\n        \"audio\": {\n          \"attachment_id\": 1,\n          \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n        },\n        \"content\": \"はじめまして!\\n始めまして!\\nHajimemashite!Rất hân hạn được làm quen với anh/chị/bạn!\"\n      },\n      {\n        \"character_name\": \"Nam Hoai\",\n        \"audio\": {\n          \"attachment_id\": 1,\n          \"file\": \"https://stag-se-be.ppe.edu.vn/storage/media/files/2021-07-12-1626058726-2066540857-7.mp3\"\n        },\n        \"content\": \"はじめまして!\\n始めまして!\\nHajimemashite!Rất hân hạn được làm quen với anh/chị/bạn!\"\n      }\n    ]\n  },\n  \"score\": 8.3\n}\n           "
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "update_sing_with_friend_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $id : ID\n    $goal_id : ID\n    $type: String\n    $more : JSON\n    $score : Float\n    )\n{\n  update_japanese_goals(\n    input: \n    {\n     id: $id\n     type: $type\n    goal_id : $goal_id\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        type\n        score,\n        more\n\n    }\n  \n}",
										"variables": "  {\n    \"id\": 972,\n    \"more\": {\n      \"user_invite_ids\": [\n       \n      ]\n    }\n  }"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "update_other_diary_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $id : ID\n    $goal_id : ID\n    $type : String\n    $more : JSON\n    $score : Float\n    )\n{\n  update_japanese_goals(\n    input: \n    {\n    id: $id\n    goal_id : $goal_id\n    type : $type\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        type\n        score,\n        more\n\n    }\n  \n}",
										"variables": "{\n    \"id\": 21,\n  \"type\": \"diary\",\n  \"more\": [\n    {\n       \"other\":\"hom nay vui haha\"\n    }\n  ]\n}\n           "
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "update_my_diary_japanese_goals",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation(\n    $id : ID\n    $goal_id : ID\n    $type : String\n    $more : JSON\n    $score : Float\n    )\n{\n  update_japanese_goals(\n    input: \n    {\n        id: $id\n    goal_id : $goal_id\n    type : $type\n    more : $more\n    score : $score\n    }) {\n        id\n        goal_id,\n        type\n        score,\n        more\n\n    }\n  \n}",
										"variables": "{\n    \"goal_id\": 1123,\n  \"type\": \"diary\",\n  \"more\": [\n    {\n       \"content\":\"hom nay chay bo\"\n    }\n  ]\n}\n           "
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "diary",
					"item": [
						{
							"name": "my_diary_invited",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n  my_diary_invited\n}",
										"variables": "{\r\n}\r\n"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "my_diary",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query($type:String!) {\n  my_diary(\n      type : $type\n  )\n}",
										"variables": "{\r\n\"type\": \"diary\"\r\n}\r\n"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "my_diary_review",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n  my_diary_review\n}",
										"variables": "{\r\n}\r\n"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "query_other_diary_japanese_goal",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query($id:ID, $goal_id:ID) {\n  detail_japanese_goal(\n      id : $id\n      goal_id:$goal_id\n  ) {\n     id\n     goal{\n         id\n         name\n         parent{\n             id\n             name\n         }\n     }\n     goal_root{\n         id\n         name\n     }\n    type\n    score\n    more\n  }\n}",
										"variables": "{\r\n\"goal_id\": 11\r\n}\r\n"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "search_review_my_diary",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query($type:String!) {\n  my_diary(\n      type : $type\n  )\n}",
										"variables": "{\r\n\"type\": \"diary\"\r\n}\r\n"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "delete_japanese_goals",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation($id:ID!) \n    {\n    delete_japanese_goals(\n        id:$id\n    )\n}",
								"variables": "{\r\n    \"id\": 4\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_japanese_goals",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  japanese_goals(first:22, page:1) {\n    data {\n     id\n    type\n    more\n  }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_sort_japanese_goals",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($first: Int!, $page: Int!, $orderBy: [OrderByClause!]) {\n  sort_japanese_goals(\n      first: $first, \n      page: $page, \n      orderBy: $orderBy) {\n    data {\n     id\n    type\n    more\n  }\n  }\n}",
								"variables": "{\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_detail_japanese_goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id:ID, $goal_id: ID) {\n  detail_japanese_goal(\n      id : $id\n      goal_id: $goal_id\n  ) {\n     id\n     goal{\n         id\n         name\n         parent{\n             id\n             name\n         }\n     }\n    payment_status\n     goal_root{\n         id\n         name\n         price\n         user{\n            id\n            name\n        }\n     }\n     next_goal{\n         id\n         name\n         type\n     }\n     prev_goal{\n         id\n         name\n         type\n     }\n    type\n    score\n    more\n      list_users{\n         id\n         name\n         attachment{\n             id\n             file\n             thumb\n         }\n     }\n  }\n}",
								"variables": "{\r\n \"goal_id\": \"16394701838\"\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "my_basket_or_card",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($type:String!) {\n  my_basket_or_card(\n      type : $type\n  )\n}",
								"variables": "{\r\n\"type\": \"flash_card\"\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_flashcard_category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($type:String!) {\n  flashcard_category(\n      type : $type\n  )\n}",
								"variables": "{\r\n\"type\": \"flashcard_category\"\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_rename_flashcard_category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\n    $old_name:String!,\n    $new_name:String!\n    ) {\n  rename_flashcard_category(\n      old_name: $old_name\n      new_name: $new_name\n  )\n}",
								"variables": "{\r\n    \"old_name\": \"Xuyên không\",\r\n    \"new_name\": \"Bí cảnh\"\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_my_flashcard_study",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($goal_id:ID) {\n  my_flashcard_study(goal_id: $goal_id)\n}",
								"variables": "{\r\n    \"goal_id\":2269\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query search_by_type_japanese_goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($type: String) {\n  search_by_type_japanese_goal(\n      type : $type\n  ) {\n     id\n     goal{\n         id\n         name\n         parent{\n             id\n             name\n         }\n     }\n     goal_id\n    type\n    score\n    more\n  }\n}",
								"variables": "{\r\n    \"type\":\"communication\"\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "friend",
			"item": [
				{
					"name": "create_friend",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\n    $user_id_friend:ID!, \n    $status:String\n    )\n{\n  create_friend(\n    input: \n    {\n      user_id_friend: $user_id_friend\n      status: $status\n    }) \n  \n}",
								"variables": "{\n    \"user_id_friend\": 41,\n    \"status\": \"accept\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_friend",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation($user_id_friend:ID!) \n    {\n    delete_friend(\n    input: \n        {\n        user_id_friend: $user_id_friend\n        }\n  )\n}",
								"variables": "{\r\n    \"user_id_friend\": 5\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_friend",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation(\n    $goal_ids:[ID]\n    $id: ID) \n    {\n  update_friend(\n    input:{\n        id: $id\n        goal_ids: $goal_ids\n    }\n   )\n    {\n        id\n        goals{\n            id\n            name\n        }\n    }\n  \n}",
								"variables": "{   \n    \"id\": 30,\n    \"goal_ids\": [7,5,6]\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query friends",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  friends(first:22, page:1) {\n    data {\n     id\n        user{\n            id\n            name\n            email\n            created_at\n            updated_at\n        }\n        user_id_friend\n        status\n        goals{\n            id\n            name\n        }\n        created_at\n        updated_at\n  }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query recomment_friends",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($name: String){\n    recomment_friends(\n        name: $name\n    ){\n        number_goals\n        id\n        name\n        email\n        phone_number\n        number_mutual\n        attachment{\n            id\n            thumb\n        }\n        mutual_friend{\n            id\n        name\n        attachment{\n            id\n            thumb\n        }\n        }\n    }\n}",
								"variables": "{\r\n    \"name\": \"hihi\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_friends",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($name: String, $status: String){\n  my_friends(\n   name: $name\n   status: $status){\n    friend{\n          id\n        }\n      id\n      name\n      email\n      phone_number\n      friend_status\n      attachment{\n          id\n          thumb\n      }\n      background_attachment{\n            id\n            thumb\n        }\n      mutual_friend{\n            id\n        name\n        attachment{\n            id\n            thumb\n        }\n        \n   }\n  }\n}\n",
								"variables": "{\n \"name\": \"hihi\",\n \"status\": \"accept\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query list_pend_friends",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($status: String){\n  list_pend_friends\n  (\n   status: $status\n   ){\n       friend{\n           id\n           status\n       }\n      id\n      messages\n      name\n      email\n      phone_number\n      quotes\n       attachment{\n          id\n          thumb\n      }\n       mutual_friend{\n            id\n        name\n        attachment{\n            id\n            thumb\n        }\n       }\n      \n    \n   }\n}\n\n",
								"variables": "{\r\n    \r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query search_people",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($name: String){\n  search_people(\n   name: $name){\n    \n      id\n      name\n      email\n      phone_number\n      friend_status\n      attachment{\n          id\n          thumb\n      }\n      background_attachment{\n            id\n            thumb\n        }\n         friend{\n           id\n           status\n       }\n      mutual_friend{\n            id\n        name\n        attachment{\n            id\n            thumb\n        }\n        \n   }\n  }\n}\n",
								"variables": "{\n \"name\": null\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "achieve",
			"item": [
				{
					"name": "create_achieve",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation($general_id:ID!,$user_invite_ids:[ID]!,$status:String) {\n  create_achieve(\n    input: {\n      general_id: $general_id\n      user_invite_ids: $user_invite_ids\n      status: $status\n    }\n  )\n  }",
								"variables": "{\n     \"general_id\" : 2095,\n    \"user_invite_ids\" : [154],\n    \"status\" : \"pending\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "add_template_achieve",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation($goal_id: ID!) {\n  add_template(\n    input: {\n      goal_id: $goal_id\n    }\n  )\n  }",
								"variables": "{\n   \"goal_id\": 1994\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_achieve",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation($id:ID!,$general_id:ID,$user_invite_ids:ID,$status:String) {\n  update_achieve_with_general_id(\n    input: {\n        id : $id\n      general_id: $general_id\n      user_invite_ids: $user_invite_ids\n      status: $status\n      \n    }\n  ) {\n      id\n      general{id}\n      user_invite{id}\n    \n  }\n}",
								"variables": "{\n    \"id\": 2,\n    \"general_id\": 18,\n    \"status\" : \"accept\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_achieve_with_general_id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation($id:ID,$general_id:ID,$user_invite_ids:ID,$status:String) {\n  update_achieve_with_general_id(\n    input: {\n        id : $id\n      general_id: $general_id\n      user_invite_ids: $user_invite_ids\n      status: $status\n      \n    }\n  ) {\n      id\n      general{id}\n      user_invite{id}\n      status\n    \n  }\n}",
								"variables": "{\n    \"general_id\":44,\n    \"status\" : \"accept\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_achieve",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID) {\r\n  delete_achieve(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 18\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_achieve_by_goal_id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($goal_id:ID) {\r\n  delete_achieve(\r\n    input: {\r\n      goal_id: $goal_id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"goal_id\": 46\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_achieve",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  achieve(first:20, page:1) {\r\n    data {\r\n    id\r\n    status\r\n    general{\r\n        id \r\n        task{\r\n            id\r\n            name\r\n        }\r\n        user{\r\n            id \r\n            name\r\n        }\r\n    }\r\n  }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "detail_achieve",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($general_id: ID){\r\n  detail_achieve(\r\n      general_id: $general_id\r\n     \r\n    ) {\r\n        id   \r\n        user{\r\n            id\r\n            name\r\n            attachment\r\n            {\r\n                thumb\r\n            }\r\n        }\r\n        detail\r\n       member{\r\n           id\r\n           name\r\n           attachment{\r\n               thumb\r\n           }\r\n       }\r\n    }\r\n}",
								"variables": "{\r\n    \"general_id\" : 1\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "sort_achieve",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_achieve(\r\n      \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n      id\r\n      \r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "create_user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation(\n    $name:String, \n    $email:String, \n    $password: String,\n    $username:String, \n    $quotes: String,\n    $roles: JSON\n    $role_label: String\n    $phone_number: String ,\n    $avatar_attachment_id: ID,\n    $background_attachment_id: ID\n    ) \n{\n  create_user(\n    input: \n    {\n        name: $name\n        email: $email\n        password: $password\n        username: $username\n        roles: $roles\n        role_label: $role_label\n        quotes: $quotes\n        phone_number: $phone_number\n        avatar_attachment_id: $avatar_attachment_id\n        background_attachment_id : $background_attachment_id\n    }) \n    {\n            id\n            name\n            email\n            roles\n            username\n            quotes\n            phone_number\n            created_at\n            updated_at\n            attachment{\n                id\n                file\n                thumb\n            }\n            background_attachment{\n                id\n                file\n                thumb\n            }\n        }\n}",
								"variables": "{\n    \"username\":\"dương\",\n    \"name\": \"ehe\",\n    \"email\":\"kids123@gmail.com\",\n    \"password\": \"123456789\",\n    \"roles\":[\n        \"member_add\",\n        \"member_banned\",\n        \"member_bannedGoal\",\n        \"member_changeInfor\",\n        \"member_resetPwd\"\n    ],\n    \"role_label\": \"admin\",\n    \"avatar_attachment_id\":1,\n    \"background_attachment_id\":1,\n    \"phone_number\":\"32423324233\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation(\n    $id: ID\n    $name:String, \n    $email:String, \n    $username:String, \n    $quotes: String,\n    $roles: JSON\n    $role_label: String \n    $phone_number: String ,\n    $avatar_attachment_id: ID,\n    $background_attachment_id: ID\n    $is_flag: Boolean\n    ) \n{\n  update_user(\n    input: \n    {\n        id: $id\n        name: $name\n        email: $email\n        username: $username\n        roles: $roles\n        role_label: $role_label\n        quotes: $quotes\n        phone_number: $phone_number\n        avatar_attachment_id: $avatar_attachment_id\n        background_attachment_id : $background_attachment_id\n        is_flag: $is_flag\n    }) \n    {\n            id\n            name\n            email\n            roles\n            role_label\n            username\n            quotes\n            phone_number\n            created_at\n            updated_at\n            is_flag\n            attachment{\n                id\n                file\n                thumb\n            }\n            background_attachment{\n                id\n                file\n                thumb\n            }\n        }\n}",
								"variables": "{\n    \"id\":4,\n    \"roles\":[\n        \"member_add\",\n        \"member_banned\",\n        \"member_bannedGoal\",\n        \"member_changeInfor\",\n        \"member_resetPwd\"\n    ],\n    \"role_label\": \"student\",\n    \"avatar_attachment_id\":1,\n    \"background_attachment_id\":1,\n    \"phone_number\":\"32423324233\",\n    \"is_flag\": false\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation($id: ID) {\n  delete_user(\n     input: {\n          id:$id\n        }\n    )\n}",
								"variables": "{\r\n    \"id\": 3\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  users (first:22, page:1) {\n    data {\n        id\n        name\n        email\n        roles\n        username\n        quotes\n        phone_number\n  }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query(\n    $first: Int!, \n    $page: Int!, \n    $orderBy: [OrderByClause!]){\n  sort_users(\n      first: $first, \n      page: $page, \n      orderBy: $orderBy\n    ) {\n    data {\n        id\n        name\n        email\n        roles \n        username\n        quotes\n        phone_number\n        created_at\n        updated_at\n  }\n    paginatorInfo {\n      total\n      currentPage\n      hasMorePages\n      lastPage\n    }\n  }\n}\n\n",
								"variables": "{\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"ASC\"\r\n    }]\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query me",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\n  me{\n     id\n     attachment{\n         id\n         file\n         thumb\n     }\n     background_attachment{\n         id\n         file\n         thumb\n     }\n        name\n        email\n        username\n        roles\n        role_label\n        phone_number\n        quotes\n        notification\n        created_at\n        updated_at\n  }\n}\n\n",
								"variables": "{\r\n\r\n   \r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query list_user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query(\n    $first: Int!\n    $page: Int!\n    $orderBy: JSON\n    $search: JSON\n){\n  list_users(\n      first:$first\n      page: $page\n      orderBy: $orderBy\n      search: $search\n  ){data{\n      id\n      full\n      name\n      email\n      phone_number\n      roles\n      role_label\n      org\n     member_number\n     business_field\n     relation_level\n     payments{\n         id\n         goal{\n             id\n             name\n         }\n         status\n     }\n      self_goals{\n          id\n          name\n      }\n      inviation_goals{\n          id\n          name\n      }\n      shared_goals{\n          id\n          name\n      }\n    buy_goals{\n        id\n        name\n    }\n    start_smile_eye_time\n    profit_forSelf\n    profit_for_smile_eye\n  }\n    total_page\n  }\n}\n",
								"variables": "{\r\n    \"first\":2000,\r\n    \"page\":1,\r\n    \"search\":{\r\n        \r\n    },\r\n    \"orderBy\": {\r\n        \"column\": \"id\",\r\n        \"order\": \"ASC\"\r\n    }\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query summary_users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\n  summary_users\n      {\n        id       \n        number_member\n        created_at\n  }\n}\n",
								"variables": "{\r\n\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\n  user(\n      id: $id\n    ) {\n    id\n    friend_status\n        name\n        email\n        phone_number\n        roles\n        role_label\n        username\n        quotes\n        total_goal\n        total_friend\n        attachments{\n            id \n            thumb\n        }\n        attachment{\n            id\n            thumb\n        }\n        background_attachment{\n            id\n            thumb\n        }\n        goals{\n            id\n            general_info{\n            attachments{\n                thumb\n            }\n            }\n        }\n        my_friends{\n            id\n            name\n            attachment{\n                thumb\n            }\n        }\n  }\n}\n\n",
								"variables": "{\r\n    \"id\":154\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "attachment",
			"item": [
				{
					"name": "{{url}}/api/attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/HoaiNam/OneDrive/Pictures/new.jpg"
								},
								{
									"key": "audio_base64",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/attachment",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"attachment"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\n  delete_attachment(input: { id: $id })\n}\n",
								"variables": "{\r\n    \"id\":2\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "before_delete_attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\n  before_delete(\n      id : $id\n  ){\n      attachment_id \ndelete_type \ndelete_name\n  }\n}\n",
								"variables": "{\r\n    \"id\":1\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  attachment(first: 22, page: 1) {\n    data {\n      id\n      user {\n        id\n        name\n        email\n        created_at\n        updated_at\n      }\n      \n      file_type\n      file\n      file_size\n      created_at\n      updated_at\n    }\n  }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\n  sort_attachment(\n      first: $first, \n      page: $page, \n      orderBy: $orderBy\n    ) {\n    data {\n    id\n    user{\n        id\n        name\n        email\n        created_at\n        updated_at\n    }\n    goal{\n        id\n    }\n    todolist{\n        id\n    }\n    challenge{\n        id\n        name\n        \n    }\n    file_type\n    file\n    created_at\n    updated_at\n  }\n    paginatorInfo {\n      total\n      currentPage\n      hasMorePages\n      lastPage\n    }\n  }\n}",
								"variables": "{\r\n\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  my_attachment {\n    id\n    file_type\n    file\n    file_size\n    created_at\n    updated_at\n    thumb\n  }\n}\n",
								"variables": "{\r\n\r\n   \r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\n  detail_attachment(id: $id) {\n    id\n    user {\n      id\n      name\n      email\n      created_at\n      updated_at\n    }\n    \n    file_type\n    file\n    created_at\n    updated_at\n  }\n}\n",
								"variables": "{\r\n\r\n    \"id\": 1\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query search_attachment{file}",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($file: String, $first: Int!, $page: Int!, $orderBy: [OrderByClause!]) {\n  search_attachment(file: $file, first: $first, page: $page, orderBy: $orderBy) {\n    data {\n      id\n      user {\n        id\n        name\n        email\n        created_at\n        updated_at\n      }\n      goal {\n        id\n      }\n      todolist {\n        id\n      }\n      challenge {\n        id\n        name\n      }\n      file_type\n      file\n      created_at\n      updated_at\n    }\n    paginatorInfo {\n      total\n      currentPage\n      hasMorePages\n      lastPage\n    }\n  }\n}\n",
								"variables": "{\r\n    \"file\": \"%2021%\",\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"ASC\"\r\n    }]\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "log",
			"item": [
				{
					"name": "create_log",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n  $table: String\r\n  $action: String\r\n  $content: JSON\r\n\r\n) {\r\n  create_log(\r\n    input: {\r\n      table: $table\r\n      action: $action\r\n      content: $content\r\n    }\r\n  ) {\r\n    id\r\n    user {\r\n      id\r\n      name\r\n    }\r\n    \r\n    content\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"table\":\"friend\",\r\n    \"action\": \"private\",\r\n    \"content\":{\r\n        \"id\" : 1,\r\n        \"conten\" : \"come on baby\"\r\n    }\r\n   \r\n    \r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_log",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id:ID!\r\n  $table: String\r\n  $action: String\r\n  $content:JSON\r\n  \r\n) {\r\n  update_log(\r\n    input: {\r\n      id: $id\r\n      table: $table\r\n      action: $action\r\n      content: $content\r\n    }\r\n  ) {\r\n    \r\n    content\r\n    created_at\r\n    updated_at\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"id\": 2,\r\n    \"table\": \"log\",\r\n    \"action\": \"toang\",\r\n    \"content\": {\r\n        \"id\" : 1,\r\n        \"content\" : \"ok\"\r\n    }\r\n\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_log",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  delete_log(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": \"41\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  logs(first:22, page:1) {\r\n    data {\r\n    id\r\n    user{\r\n        id\r\n        name\r\n        email\r\n    }\r\n    content\r\n    created_at\r\n    updated_at\r\n  }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_ log",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\r\n  detail_log(\r\n      id: $id\r\n     \r\n    ) {\r\n        id\r\n        user{\r\n            id\r\n        }\r\n        \r\n        content\r\n       \r\n        created_at\r\n        updated_at\r\n    }\r\n}\r\n",
								"variables": "{\r\n    \"id\": 2\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  my_logs{\r\n    id\r\n    user{\r\n        id\r\n        name\r\n        email\r\n        created_at\r\n        updated_at\r\n    }\r\n   \r\n    content\r\n    created_at\r\n    updated_at\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query search_logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($content: String!, $first: Int!, $page: Int!, $orderBy: [OrderByClause!]) {\r\n  search_logs(content: $content, first: $first, page: $page, orderBy: $orderBy) {\r\n    data {\r\n      id\r\n      user {\r\n        id\r\n        name\r\n        email\r\n        created_at\r\n        updated_at\r\n      }\r\n      content\r\n      \r\n      created_at\r\n      updated_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"content\": \"%\",\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"ASC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_logs(\r\n      \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n      id\r\n      user{\r\n          id\r\n          name\r\n      }\r\n      content\r\n      created_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n\r\n",
								"variables": "{\r\n    \r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "note",
			"item": [
				{
					"name": "create_note",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n  $checked_at : DateTime\r\n    $content : String\r\n\r\n) {\r\n  create_note(\r\n    input: {\r\n     checked_at : $checked_at\r\n    content : $content\r\n    }\r\n  ) {\r\n    id\r\n    user{\r\n        id\r\n    }\r\n    checked_at\r\n    content\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"checked_at\" : \"2021-07-16 20:00:00\",\r\n    \"content\" : \"thu comment 16\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_note",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n   $id: ID!\r\n    $checked_at : DateTime\r\n    $content : String\r\n  \r\n) {\r\n  update_note(\r\n    input: {\r\n     id: $id\r\n    checked_at : $checked_at\r\n    content : $content\r\n    }\r\n  ) {\r\n    id\r\n    user{\r\n        id\r\n    }\r\n    checked_at\r\n    content\r\n  }\r\n}\r\n",
								"variables": "{\r\n   \"id\": 1,\r\n    \"checked_at\" : \"2021-7-14 00:00:00\",\r\n    \"content\" : \"sua doi lan 1\"\r\n\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_note",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  delete_note(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": \"3\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_notes_group_by_date",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n   notes_group_by_date{\r\n       day\r\n       list{\r\n           id\r\n           content\r\n       }\r\n   }\r\n}\r\n    ",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_notes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  notes(first:22, page:1) {\r\n    data {\r\n    id\r\n    user{\r\n        id\r\n    }\r\n    checked_at\r\n    content\r\n  }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_ note",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\r\n  detail_note(\r\n      id: $id\r\n     \r\n    ) {\r\n    id\r\n    user{\r\n        id\r\n    }\r\n    checked_at\r\n    content\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"id\": 1\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_notes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($checked_at : Date) {\r\n  my_notes(\r\n      checked_at: $checked_at\r\n  ){\r\n    id\r\n    user{\r\n        id\r\n    }\r\n    checked_at\r\n    content\r\n  }\r\n    \r\n}",
								"variables": "{\r\n    \"checked_at\" : \"2021-07-14\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_notes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_notes(\r\n      \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n    id\r\n    user{\r\n        id\r\n    }\r\n    checked_at\r\n    content\r\n  }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n\r\n",
								"variables": "{\r\n    \r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"created_at\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user_avatar",
			"item": [
				{
					"name": "create_user_avatar",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation(\n    $background_file:String, \n    $face:JSON, \n    $hair:JSON, \n    $eyebrows:JSON, \n    $body:JSON, \n    $eyes:JSON, \n    $mouth:JSON, \n    $nose:JSON, \n    $shirt:JSON \n    $trouser:JSON, \n    $shoes:JSON,\n    ) \n{\n  create_user_avatar(\n    input: \n    {\n        background_file: $background_file\n        face: $face\n        hair: $hair\n        eyebrows: $eyebrows\n        body: $body\n        eyes: $eyes\n        mouth: $mouth\n        nose: $nose\n        shirt: $shirt\n        trouser: $trouser\n        shoes: $shoes\n    }) \n    {\n        id\n        user{\n            id\n            name\n            email\n            created_at\n            updated_at\n        }\n        background_file\n        face\n        hair\n        eyebrows\n        body\n        eyes\n        mouth\n        nose\n        shirt\n        trouser\n        shoes\n    }\n}",
								"variables": "{\n    \"background_file\": \"bg-12.jpg\",\n    \"face\": { \"file\": \"face1.jpg\", \"color\": \"red\"},\n    \"hair\": { \"file\": \"hair.jpg\", \"color\": \"black\"},\n    \"eyebrows\": { \"file\": \"eyes-1.jpg\", \"color\": \"yellow\"},\n    \"body\": { \"file\": \"face.jpg\", \"color\": \"White\"},\n    \"eyes\": { \"file\": \"face3.jpg\", \"color\": \"White\"},\n    \"mouth\": { \"file\": \"face1.jpg\", \"color\": \"White\"},\n    \"nose\": { \"file\": \"face2.jpg\", \"color\": \"White\"},\n    \"shirt\": { \"file\": \"face2.jpg\", \"color\": \"White\"},\n    \"trouser\": { \"file\": \"face2.jpg\", \"color\": \"black\"},\n    \"shoes\": { \"file\": \"face.jpg\", \"color\": \"yellow\"}\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_user_avatar",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation {\n  delete_user_avatar\n}",
								"variables": "{\r\n    \"id\": 2\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_user_avatar",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation(\n    $background_file:String, \n    $face:JSON, \n    $hair:JSON, \n    $eyebrows:JSON, \n    $body:JSON, \n    $eyes:JSON, \n    $mouth:JSON, \n    $nose:JSON, \n    $shirt:JSON, \n    $trouser:JSON, \n    $shoes:JSON ) \n{\n  update_user_avatar(\n    input: \n    {\n        background_file: $background_file\n        face: $face\n        hair: $hair\n        eyebrows: $eyebrows\n        body: $body\n        eyes: $eyes\n        mouth: $mouth\n        nose: $nose\n        shirt: $shirt\n        trouser: $trouser\n        shoes: $shoes\n    }) \n    {\n            id\n            user{\n                id\n                name\n                email\n                created_at\n                updated_at\n            }\n            background_file\n            face\n            hair\n            eyebrows\n            body\n            eyes\n            mouth\n            nose\n            shirt\n            trouser\n            shoes\n        }\n}",
								"variables": "{\n    \"background_file\": \"back.jpg\",\n    \"face\": [\"face.jpg\", \"White\"],\n    \"hair\": [\"hair.jpg\", \"Black\"],\n    \"eyebrows\": [\"eyebrows.jpg\", \"Black\"],\n    \"body\": [\"body.jpg\", \"White\"],\n    \"eyes\": [\"eyes.jpg\", \"Black\"],\n    \"mouth\": [\"mouth.jpg\", \"Yellow\"],\n    \"nose\": [\"nose.jpg\", \"White\"],\n    \"shirt\": [\"shirt.jpg\", \"Yellow\"],\n    \"trouser\": [\"trouser.jpg\", \"White\"],\n    \"shoes\": [\"shoes.jpg\", \"Yellow\"]\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query user_avatars",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  user_avatars(first:22, page:1) {\n    data {\n     id\n        user{\n            id\n            name\n            email\n            created_at\n            updated_at\n        }\n        background_file\n        face\n        hair\n        eyebrows\n        body\n        eyes\n        mouth\n        nose\n        shirt\n        trouser\n        shoes\n        created_at\n        updated_at\n  }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort user_avatars",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query(\n    $first: Int!, \n    $page: Int!, \n    $orderBy: [OrderByClause!])\n    {\n  sort_user_avatars(\n      first: $first, \n      page: $page, \n      orderBy: $orderBy\n    ) {\n    data {\n      id\n        user{\n            id\n            name\n            email\n            created_at\n            updated_at\n        }\n        background_file\n        face\n        hair\n        eyebrows\n        body\n        eyes\n        mouth\n        nose\n        shirt\n        trouser\n        shoes\n        created_at\n        updated_at\n  }\n    paginatorInfo {\n      total\n      currentPage\n      hasMorePages\n      lastPage\n    }\n  }\n}\n\n",
								"variables": "{\r\n\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my user_avatars",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\n  my_user_avatars{\n     id\n        user{\n            id\n            name\n            email\n            created_at\n            updated_at\n        }\n        background_file\n        face\n        hair\n        eyebrows\n        body\n        eyes\n        mouth\n        nose\n        shirt\n        trouser\n        shoes\n        created_at\n        updated_at\n  }\n}\n\n",
								"variables": "{\r\n\r\n   \r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail user_avatars",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\n  detail_user_avatars(\n      id: $id\n    ) {\n      id\n        user{\n            id\n            name\n            email\n            created_at\n            updated_at\n        }\n        background_file\n        face\n        hair\n        eyebrows\n        body\n        eyes\n        mouth\n        nose\n        shirt\n        trouser\n        shoes\n        created_at\n        updated_at\n  }\n}\n\n",
								"variables": "{\r\n\r\n    \"id\": 1\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "general-info",
			"item": [
				{
					"name": "create_general_info",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation($goal_id:ID, $task_id:ID, $todolist_id:ID,\n$address:String, $zalo : String,$repeat:String,$reminder:String,\n$action_at:Date,$action_at_time: String,$note:String,$attachment_ids:JSON,$publish:String,\n$contest:JSON,\n$color : String\n\n) {\n  create_generalInfo(\n    input: {\n      goal_id: $goal_id\n      task_id: $task_id\n      todolist_id: $todolist_id,\n      address:$address,\n      zalo:$zalo,\n      repeat:$repeat,\n      reminder:$reminder,\n      action_at : $action_at,\n      action_at_time: $action_at_time,\n      note:$note,\n      attachment_ids:$attachment_ids,\n      publish:$publish,\n      contest:$contest,\n      color:$color\n    }\n  ) {\n      id\n    user{\n        id\n    }\n    goal{\n        id\n    }\n    task{\n        id\n    }\n    todolist {\n        id\n    }\n    address\n    zalo\n    repeat\n    reminder\n    action_at\n    action_at_time\n    note\n    attachments{\n        id\n    }\n    publish \n    contest \n    color \n    created_at\n    updated_at\n  }\n}",
								"variables": "{\n    \"goal_id\": null,\n    \"task_id\": null,\n    \"todolist_id\": 2,\n    \"address\" :\"51 tran bach dang\",\n    \"zalo\":\"0965893632\",\n    \"repeat\" : \"every day\",\n    \"reminder\":\"5 minute before\",\n    \"action_at\": \"2021-11-20\",\n    \"action_at_time\": \"20:30:00\",\n    \"note\":\"this is note\",\n    \"attachment_ids\":[1,2],\n    \"publish\":\"ok nhe\",\n    \"contest\":{\"name\" : \"ok\",\n    \"content\":\"ok\"},\n    \"color\":\"yellow\"\n\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_generalInfo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation($id: ID, $goal_id:ID, $task_id:ID, $todolist_id:ID,\n$address:String, $zalo : String,$repeat:String,$reminder:String,\n$action_at:Date,$action_at_time: String,$note:String,$attachment_ids:JSON,$publish:String,\n$contest:JSON,\n$color : String\n\n) {\n  update_generalInfo(\n    input: {\n        id: $id\n      goal_id: $goal_id\n      task_id: $task_id\n      todolist_id: $todolist_id,\n      address:$address,\n      zalo:$zalo,\n      repeat:$repeat,\n      reminder:$reminder,\n      action_at : $action_at,\n      action_at_time: $action_at_time,\n      note:$note,\n      attachment_ids:$attachment_ids,\n      publish:$publish,\n      contest:$contest,\n      color:$color\n    }\n  ) {\n      id\n    user{\n        id\n    }\n    goal{\n        id\n    }\n    task{\n        id\n    }\n    todolist {\n        id\n    }\n    address\n    zalo\n    repeat\n    reminder\n    action_at\n    action_at_time\n    note\n    attachments{\n        id\n    }\n    publish \n    contest \n    color \n    created_at\n    updated_at\n  }\n}",
								"variables": "{\n    \"id\" : 1,\n    \"goal_id\": 1\n\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_generalInfo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  delete_generalInfo(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 1\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_general_info",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  generalInfo(first:20, page:1) {\r\n    data {\r\n    id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    task{\r\n        id\r\n        name\r\n    }\r\n    todolist {\r\n        id\r\n        name\r\n    }\r\n    address\r\n    zalo\r\n    repeat\r\n    reminder\r\n    action_at\r\n    note\r\n    attachments{\r\n        id\r\n        thumb\r\n    }\r\n    publish \r\n    contest \r\n    color \r\n    created_at\r\n    updated_at\r\n  }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "detail_generalInfo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\r\n  detail_generalInfo(\r\n      id: $id\r\n     \r\n    ) {\r\n        id      \r\n        action_at\r\n        action_at_time\r\n        user{id}\r\n        goal{id}\r\n        task{id}\r\n        todolist{id}\r\n        attachments{\r\n            id\r\n        }\r\n        publishs{\r\n            id\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n    \"id\": 13\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "my_generalInfo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  my_generalInfo{\r\n       id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    task{\r\n        id\r\n        name\r\n    }\r\n    todolist {\r\n        id\r\n        name\r\n    }\r\n    address\r\n    zalo\r\n    repeat\r\n    reminder\r\n    action_at\r\n    note\r\n    attachments{\r\n        id\r\n        thumb\r\n    }\r\n    publish \r\n    contest \r\n    color \r\n    created_at\r\n    updated_at\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query search_general_info",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($note: String!, $first: Int!, $page: Int!, $orderBy: [OrderByClause!]) {\r\n  search_generalInfo(note: $note, first: $first, page: $page, orderBy: $orderBy) {\r\n    data {\r\n      id\r\n      \r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \"note\": \"%\",\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"ASC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_generalInfo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_generalInfo(\r\n      \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n      id\r\n      \r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "task",
			"item": [
				{
					"name": "create_task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n  $name : String!\r\n  $goal_id : ID\r\n  $general_info: JSON\r\n  \r\n) {\r\n  create_task(\r\n    input: {\r\n      name: $name\r\n      goal_id : $goal_id\r\n      general_info : $general_info\r\n    }\r\n  ) {\r\n    id\r\n    goal_id\r\n    user{\r\n        id\r\n    }\r\n    name\r\n    goal_id\r\n    general_info{\r\n        id\r\n        address\r\n        zalo\r\n        repeat\r\n        reminder\r\n        action_at\r\n        action_at_time\r\n        note\r\n        publish\r\n        color\r\n        attachments{\r\n            file\r\n            file_type\r\n            thumb\r\n        }\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \"goal_id\": null,\r\n    \"name\" : \"chay bo\",\r\n    \"general_info\": {\r\n        \"address\": \"ultimate\",\r\n        \"zalo\": \"034470383822\",\r\n       \"repeat\" : \"every day\",\r\n        \"action_at\": \"2021-07-26\",\r\n        \"action_at_time\": \"01:00:00\",\r\n        \"note\": \"Hom nay that vui :D\",\r\n        \"attachment_ids\": [1, 2],\r\n        \"publish\": \"public\",\r\n        \"color\": \"red\"\r\n    } \r\n    \r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "task_to_goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n  $parent_id: ID\r\n  $name: String!\r\n  $attachment_ids:  JSON\r\n  $start_day: DateTime!\r\n  $end_day: DateTime!\r\n  $status : String!\r\n  $task_id: ID\r\n  $is_pined: Boolean\r\n) {\r\n  task_to_goal(\r\n    input: {\r\n      parent_id: $parent_id\r\n      name: $name\r\n      attachment_ids: $attachment_ids\r\n      start_day: $start_day\r\n      end_day: $end_day\r\n      status: $status\r\n      task_id: $task_id\r\n      is_pined: $is_pined\r\n    }\r\n  ) {\r\n    id\r\n    name\r\n    user{\r\n        id\r\n    }\r\n    start_day\r\n    end_day\r\n    status\r\n    task_id\r\n    is_pined\r\n    \r\n  }\r\n}",
								"variables": "{\r\n    \"parent_id\": null,\r\n    \"name\": \"day la task\",\r\n    \"attachment_ids\": 1,\r\n    \"start_day\": \"2021-04-03 11:11:11\",\r\n    \"end_day\": \"2021-05-05 11:11:11\",\r\n    \"status\": \"todo\",\r\n    \"task_id\" : 2,\r\n    \"is_pined\": true \r\n    \r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!, $delete_type: String, $checked_at: String) {\r\n  delete_task(\r\n    input: {\r\n      id: $id\r\n      delete_type: $delete_type\r\n      checked_at: $checked_at\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 1,\r\n    \"delete_type\": \"task\",\r\n    \"checked_at\": \"2021-07-09\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\r\n  detail_task(id: $id) {\r\n    id\r\n    name\r\n    general_info{\r\n        id\r\n        address\r\n        zalo\r\n        repeat\r\n        reminder\r\n        action_at\r\n        action_at_time\r\n        note\r\n        publish\r\n        color\r\n        attachments{\r\n            file\r\n            file_type\r\n            thumb\r\n        }\r\n        achieves{\r\n            id\r\n            user{\r\n                id\r\n                name\r\n            }\r\n        }\r\n        created_at\r\n        updated_at\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"id\": 1\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_tasks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  my_tasks{\r\n    id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    name\r\n    user{\r\n        id\r\n    }\r\n     general_info{\r\n         id\r\n        address\r\n        zalo\r\n        repeat\r\n        reminder\r\n        action_at\r\n        action_at_time\r\n        note\r\n        publish\r\n        color\r\n        attachments{\r\n            file\r\n            file_type\r\n            thumb\r\n        }\r\n          created_at\r\n        updated_at\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  tasks(first:22, page:1) {\r\n    data {\r\n  id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    name\r\n    user{\r\n        id\r\n    }\r\n     general_info{\r\n         id\r\n        address\r\n        zalo\r\n        repeat\r\n        reminder\r\n        action_at\r\n        note\r\n        publish\r\n        color\r\n        attachments{\r\n            file\r\n            file_type\r\n            thumb\r\n        }\r\n          created_at\r\n        updated_at\r\n    }\r\n  }\r\n}\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query search_tasks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($name: String!, $first: Int!, $page: Int!, $orderBy: [OrderByClause!]) {\r\n  search_task(name: $name, first: $first, page: $page, orderBy: $orderBy) {\r\n    data {\r\n      id\r\n      name\r\n      \r\n      created_at\r\n      updated_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \"name\": \"%\",\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"ASC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_tasks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_tasks(\r\n      \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n      id\r\n      name\r\n      goal_id\r\n      created_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer  {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id : ID!\r\n    $is_change_all: Boolean\r\n  $name : String!\r\n  $goal_id : ID\r\n  $general_info: JSON\r\n  \r\n) {\r\n  update_task(\r\n    input: {\r\n        id : $id\r\n        is_change_all: $is_change_all\r\n        name: $name\r\n        goal_id : $goal_id\r\n        general_info : $general_info\r\n    }\r\n  ) {\r\n    id\r\n    user{\r\n        id\r\n    }\r\n    name\r\n    goal_id\r\n    general_info{\r\n        id\r\n        address\r\n        zalo\r\n        repeat\r\n        reminder\r\n        action_at\r\n        note\r\n        publish\r\n        color\r\n        attachments{\r\n            file\r\n            file_type\r\n            thumb\r\n        }\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": 23,\r\n    \"is_change_all\": true,\r\n    \"name\": \"Đọc sách\",\r\n    \"goal_id\": null,\r\n    \"general_info\": {\r\n        \"address\": \"Spider man\",\r\n        \"zalo\": \"0344703838\",\r\n        \"repeat\": \"every day\",\r\n        \"reminder\": \"10 minutes before\",\r\n        \"action_at\": \"2021-07-24\",\r\n        \"action_at_time\": \"12:00:00\",\r\n        \"note\": \"Hom nay that vui :D\",\r\n        \"attachment_ids\": [1,3],\r\n        \"publish\": \"public\",\r\n        \"color\": \"red\"\r\n    } \r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "comment",
			"item": [
				{
					"name": "create_comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\nmutation($general_id:ID, $parent_id:ID, $mode:String,\n$content:String, $attachment_ids : JSON) {\n  create_comment(\n    input: {\n      general_id: $general_id\n      parent_id: $parent_id\n      mode: $mode,\n      content: $content,\n      attachment_ids:$attachment_ids\n    }\n  ) {\n    id\n    content\n    created_at\n    updated_at\n    user{\n        id\n        name\n        email\n        created_at\n        updated_at\n    }\n    general{\n        id \n        goal{\n            id\n            name\n        }\n        todolist{\n            id\n        }\n        task{\n            id\n        }\n    }\n  }\n}",
								"variables": "{\n    \"general_id\": 1,\n    \"parent_id\": null,\n    \"mode\": \"let\",\n    \"content\" :\"user 3 lan 3 da o day\",\n    \"attachment_ids\" :[1,2]\n\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\r\nmutation($id:ID!,$general_id:ID, $parent_id:ID, $mode:String,\r\n$content:String, $attachment_ids : JSON) {\r\n  update_comment(\r\n    input: {\r\n        id : $id\r\n      general_id: $general_id\r\n      parent_id: $parent_id\r\n      mode: $mode,\r\n      content: $content,\r\n      attachment_ids:$attachment_ids\r\n    }\r\n  ) {\r\n    id\r\n    content\r\n    created_at\r\n    updated_at\r\n    user{\r\n        id\r\n        name\r\n        email\r\n        created_at\r\n        updated_at\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \"id\":1,\r\n    \"general_id\": 1,\r\n    \"parent_id\": 2,\r\n    \"mode\": \"hihi\",\r\n    \"content\" :\"pha comment\",\r\n    \"attachment_ids\" : [3,4]\r\n\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  delete_comment(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": \"3\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_ comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\r\n  detail_comment(\r\n      id: $id\r\n     \r\n    ) {\r\n        id\r\n        user{\r\n            id\r\n            name\r\n            attachment{\r\n                thumb\r\n            }\r\n            \r\n        }\r\n        detail\r\n        content\r\n        created_at\r\n        updated_at\r\n    }\r\n}\r\n",
								"variables": "{\r\n    \"id\": 1\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_comments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  my_comments{\r\n    id\r\n    user{\r\n        id\r\n        name\r\n        email\r\n        created_at\r\n        updated_at\r\n    }\r\n    general{\r\n        id \r\n        goal{\r\n            id\r\n            name\r\n        }\r\n        todolist{\r\n            id\r\n            name\r\n        }\r\n        task{\r\n            id\r\n            name\r\n        }\r\n    }\r\n    content\r\n    created_at\r\n    updated_at\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query comments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($general_id: ID){\r\n  comments(\r\n      general_id: $general_id\r\n    ) {\r\n        id\r\n        mode\r\n        content\r\n        user{\r\n            id\r\n            attachment{\r\n                thumb\r\n            }\r\n        }\r\n        children{\r\n            id\r\n            mode\r\n            content\r\n            attachments{\r\n                thumb\r\n            }\r\n            user{\r\n                id\r\n                attachment{\r\n                    thumb\r\n                }\r\n            }\r\n        }\r\n        attachments{\r\n            id\r\n            thumb\r\n        }\r\n    }\r\n}",
								"variables": "{\r\n    \"general_id\":873\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "todolist",
			"item": [
				{
					"name": "upsert_todolist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n  $task_id: ID!\r\n  $checked_at: DateTime!\r\n  $name: String\r\n  $status: String\r\n  $edit_type : String\r\n  $general_info: JSON\r\n\r\n) {\r\n  upsert_todolist(\r\n    input: {\r\n      task_id: $task_id\r\n      checked_at: $checked_at\r\n      name: $name\r\n      edit_type : $edit_type\r\n      status: $status\r\n      general_info: $general_info\r\n    }\r\n  ) {\r\n    id\r\n    name\r\n    status\r\n    created_at\r\n    updated_at\r\n    task{\r\n        id\r\n    }\r\n    goal{\r\n        id\r\n    }\r\n    general_info{\r\n        id\r\n        address\r\n        zalo\r\n        repeat\r\n        reminder\r\n        action_at\r\n        action_at_time\r\n        note\r\n        publish\r\n        color\r\n        attachments{\r\n            file\r\n            file_type\r\n            thumb\r\n        }\r\n        created_at\r\n        updated_at\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"task_id\": 13,\r\n    \"checked_at\":\"2021-07-23 00:00:00\",\r\n    \"status\": \"done\",\r\n    \"name\":null,\r\n    \"edit_type\" : \"one\",\r\n    \"general_info\": {\r\n        \"address\": \"duoc lam nha\",\r\n        \"zalo\": \"0344703838\",\r\n        \"repeat\": \"every day\",\r\n        \"reminder\": \"10 minutes before\",\r\n        \"action_at\": \"2021-07-27 00:20:00\",\r\n        \"action_at_time\": \"10:00:00\",\r\n        \"note\": \"Hom nay that vui :D\",\r\n        \"attachment_ids\": [1, 2],\r\n        \"publish\": \"public\",\r\n        \"color\": \"red\"\r\n    } \r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_todolist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n  $id: ID!\r\n  $name: String\r\n  $task_id: ID\r\n  $goal_id: ID\r\n  $status: String\r\n  $checked_at: DateTime\r\n) {\r\n  update_todolist(\r\n    input: {\r\n        id:$id\r\n      name: $name\r\n      task_id: $task_id\r\n      goal_id: $goal_id\r\n      status: $status\r\n      checked_at: $checked_at\r\n    }\r\n  ) {\r\n      id\r\n    goal{\r\n        id\r\n    }\r\n    name\r\n    user{\r\n        id\r\n    }\r\n    task_id\r\n    goal_id\r\n    status\r\n    created_at\r\n    updated_at\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"id\": 2,\r\n    \"name\":\"lam bai tap ve nha\",\r\n    \"task_id\": null,\r\n    \"goal_id\": \"3\",\r\n    \"status\": \"todo\",\r\n    \"checked_at\":\"2021-06-14 00:00:00\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_todolist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n   $task_id: ID!\r\n   $checked_at: DateTime!\r\n) {\r\n  delete_todolist(\r\n    input: {\r\n      task_id:$task_id\r\n      checked_at: $checked_at\r\n    }\r\n  )\r\n}\r\n",
								"variables": "{\r\n    \"task_id\": 3,\r\n    \"checked_at\": \"2021-06-20 06:57:48\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_todolists",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($checked_at: String, $sort_by:String){\r\n  my_todolists(checked_at:$checked_at, sort_by:$sort_by){\r\n    id\r\n    name\r\n    status\r\n    created_at\r\n    updated_at\r\n    task{\r\n        id\r\n    }\r\n    goal{\r\n        id\r\n    }\r\n    general_info{\r\n        id\r\n        action_at\r\n        action_at_time\r\n        color\r\n    }\r\n     is_action_at_time\r\n     is_reminder\r\n    type\r\n    task_id\r\n    todolist_id\r\n  }\r\n}",
								"variables": "{\r\n    \"checked_at\":\"2021-07-27\",\r\n    \"sort_by\": \"defaul\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_todolist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query ($task_id: ID!, $checked_at: String) {\r\n        detail_todolist(task_id: $task_id, checked_at: $checked_at) {\r\n          id\r\n          name\r\n          general_info {\r\n            id\r\n            address\r\n            zalo\r\n            repeat\r\n            reminder\r\n            action_at\r\n            action_at_time\r\n            note\r\n            attachments {\r\n              id\r\n              file\r\n              file_type\r\n              thumb\r\n            }\r\n            publish\r\n            contest\r\n            color\r\n          }\r\n          name\r\n          status\r\n          checked_at\r\n          created_at\r\n          updated_at\r\n        }\r\n      }",
								"variables": "{\r\n    \"task_id\": 5,\r\n    \"checked_at\": \"2021-07-26\"\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_todolists",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  todolists(first:22, page:1) {\r\n    data {\r\n    id\r\n    goal{\r\n        id\r\n    }\r\n    name\r\n    user{\r\n        id\r\n    }\r\n    status\r\n    task{\r\n        id\r\n        name\r\n    }\r\n    checked_at\r\n    created_at\r\n    updated_at\r\n  }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query search_todolists",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($name: String!, $first: Int!, $page: Int!, $orderBy: [OrderByClause!]) {\r\n  search_todolists(name: $name, first: $first, page: $page, orderBy: $orderBy) {\r\n    data {\r\n      id\r\n      user {\r\n        id\r\n        name\r\n      }\r\n      goal{\r\n        id\r\n        user{\r\n            id\r\n        }\r\n      }\r\n        name\r\n        status\r\n        task{\r\n            id\r\n            name\r\n        }\r\n        checked_at\r\n        created_at\r\n        updated_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"name\": \"%\",\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "my_todolists_with_month",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($created_at: String!){\r\n  my_todolists_with_month(created_at:$created_at)\r\n      \r\n}",
								"variables": "{\r\n    \"created_at\":\"2021-07\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "my_todolists_from_now",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  my_todolists_from_now\r\n      \r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_todolists",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_todolists(\r\n      \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n      id\r\n      name\r\n      status\r\n      checked_at\r\n      user{\r\n          id\r\n      }\r\n      goal{\r\n        id\r\n        user{\r\n            id\r\n        }\r\n     }\r\n     task{\r\n         id\r\n         name\r\n     }\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n\r\n",
								"variables": "{\r\n    \r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "goal",
			"item": [
				{
					"name": "upsert_goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id : ID\r\n    $root_id:ID\r\n    $task_id : ID\r\n    $report_type : String\r\n  $parent_id: ID\r\n  $name: String!\r\n  $start_day: DateTime!\r\n  $end_day: DateTime!\r\n  $status : String!\r\n  $locks: JSON\r\n  $is_lock: Boolean\r\n  $is_pined: Boolean\r\n  $general_info: JSON\r\n  $price: String\r\n  $owner_percent: Int\r\n  $trial_block: JSON\r\n  $banned_users: JSON\r\n) {\r\n  upsert_goal(\r\n    input: {\r\n        id : $id\r\n        root_id : $root_id\r\n        task_id : $task_id\r\n        report_type : $report_type\r\n      parent_id: $parent_id\r\n      name: $name\r\n      start_day: $start_day\r\n      end_day: $end_day\r\n      status: $status\r\n      locks: $locks\r\n      is_lock: $is_lock\r\n      is_pined: $is_pined\r\n      price: $price\r\n      owner_percent: $owner_percent\r\n      trial_block: $trial_block\r\n      banned_users: $banned_users\r\n      general_info: $general_info\r\n    }\r\n  ) \r\n}\r\n",
								"variables": "{\r\n    \"id\":16406725565,\r\n    \"report_type\":null,\r\n    \"task_id\" : null,\r\n    \"parent_id\": null,\r\n    \"name\": \"test 123\",\r\n    \"start_day\": \"2021-04-03 11:11:11\",\r\n    \"end_day\": \"2021-05-05 11:11:11\",\r\n    \"status\": \"todo\",\r\n    \"is_lock\": false,\r\n    \"is_pined\": true,\r\n    \"price\": \"900000 vnd\",\r\n    \"owner_percent\": 10,\r\n    \"trial_block\": [16380655991],\r\n    \"general_info\": {\r\n        \"address\": \"ultimate\",\r\n        \"zalo\": \"034470383822\",\r\n        \"repeat\": \"every day\",\r\n        \"reminder\": \"10 minutes before\",\r\n        \"action_at\": \"2021-07-06\",\r\n        \"action_at_time\": \"00:20:00\",\r\n        \"note\": \"Hom nay that vui :D\",\r\n        \"attachment_ids\": [1, 2],\r\n        \"publish\": \"public\",\r\n        \"color\": \"red\"\r\n    } \r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "change_goal_owner",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $goal_id : [ID!]\r\n    $user_id: ID!\r\n) {\r\n  change_goal_owner(\r\n    input: {\r\n        goal_id : $goal_id\r\n        user_id: $user_id\r\n    }\r\n  )\r\n}\r\n",
								"variables": "{\r\n    \"goal_id\": [3,4,5],\r\n    \"user_id\": 2\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "goal_to_task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n  $name : String!\r\n  $goal_id : ID\r\n) {\r\n  goal_to_task(\r\n    input: {\r\n      name: $name\r\n      goal_id: $goal_id\r\n    }\r\n  ) {\r\n    id\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    name\r\n    goal_id\r\n    created_at\r\n    updated_at\r\n  }\r\n}",
								"variables": "{\r\n    \"name\" : \"day la goal chuyen sang\",\r\n    \"goal_id\":2\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n  $id: ID!\r\n  $is_change_all: Boolean\r\n  $parent_id: ID\r\n  $report_type : String\r\n  $name: String\r\n  $start_day: DateTime\r\n  $end_day: DateTime\r\n  $status : String\r\n  $is_pined: Boolean\r\n  $general_info: JSON\r\n) {\r\n  update_goal(\r\n    input: {\r\n      id: $id\r\n      is_change_all: $is_change_all\r\n      parent_id: $parent_id\r\n      report_type : $report_type\r\n      name: $name\r\n      start_day: $start_day\r\n      end_day: $end_day\r\n      status: $status\r\n      is_pined: $is_pined\r\n      general_info: $general_info\r\n    }\r\n  ) {\r\n    id\r\n    name\r\n    start_day\r\n    end_day\r\n    status\r\n    is_pined\r\n    general_info{\r\n        address\r\n        zalo\r\n        repeat\r\n        reminder\r\n        action_at\r\n        note\r\n        publish\r\n        color\r\n        attachments{\r\n            file\r\n            file_type\r\n            thumb\r\n        }\r\n    }\r\n    progress\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"id\": 2,\r\n    \"is_change_all\": true,\r\n    \"report_type\": \"s\",\r\n    \"parent_id\": 10,\r\n    \"status\": \"todo\",\r\n    \"is_pined\": true,\r\n    \"general_info\": {\r\n        \"address\": \"Hai Bà Trưng\",\r\n        \"zalo\": \"096o2233\",\r\n        \"repeat\": \"every day\",\r\n        \"reminder\": \"10 minutes before\",\r\n        \"action_at\": \"2021-07-06 04:10:00\",\r\n        \"note\": \"Hihi :D\",\r\n        \"attachment_ids\": [],\r\n        \"publish\": \"public\",\r\n        \"color\": \"blue\"\r\n    } \r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_goal_move",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n  $goal_move: JSON\r\n) {\r\n  update_goal_move(\r\n    input: {\r\n      goal_move: $goal_move\r\n    }\r\n  ) \r\n}\r\n",
								"variables": "{\r\n\"goal_move\":[\r\n    {\"id\": 1},\r\n    {\"id\": 4, \"parent_id\": 1},\r\n    {\"id\": 5, \"parent_id\": 1},\r\n    {\"id\": 3, \"parent_id\": 4},\r\n    {\"id\": 2, \"parent_id\": 1}\r\n    \r\n    ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  delete_goal(\r\n    input: {\r\n      id: $id\r\n    }\r\n  )\r\n}",
								"variables": "{\r\n    \"id\":1\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "duplicate_goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  duplicate_goals(\r\n      id: $id\r\n  )\r\n}",
								"variables": "{\r\n    \"id\":14\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "copy_goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!) {\r\n  copy_goal(\r\n      id: $id\r\n  )\r\n}",
								"variables": "{\r\n    \"id\":16406662225\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_rank_goal_root",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id:ID!, $rank: Int!) {\r\n  sort_rank_goal_root(\r\n      id: $id\r\n      rank: $rank\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": 1,\r\n    \"rank\": 1\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "report_goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id:ID!) {\r\n  report_goal(id: $id\r\n  )\r\n}",
								"variables": "{\r\n    \"id\": \"root\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_goals",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($parent_id: String!) {\r\n  my_goals(parent_id: $parent_id) {\r\n      id\r\n      name\r\n      start_day\r\n       template{\r\n           id\r\n           status\r\n       }\r\n       number_member\r\n      end_day\r\n      status\r\n      type\r\n      rank\r\n      task_id\r\n      locks\r\n      is_lock\r\n      is_pined\r\n      banned_users\r\n      progress\r\n      next_goal\r\n      price\r\n      is_trial_block\r\n      general_info {\r\n        id\r\n        address\r\n        zalo\r\n        repeat\r\n        reminder\r\n        action_at\r\n        action_at_time\r\n        note\r\n        publish\r\n        color\r\n        attachments {\r\n          file\r\n          file_type\r\n          thumb\r\n        }\r\n        achieves {\r\n          id\r\n          user_invite {\r\n            id\r\n            name\r\n            attachment {\r\n              thumb\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n",
								"variables": "{\r\n \"parent_id\": \"root\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_goals Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($parent_id: String!) {\r\n  my_goals(parent_id: $parent_id) {\r\n      id\r\n      name\r\n      rank\r\n      template{\r\n          id\r\n          status\r\n      }\r\n      next_goal\r\n      general_info {\r\n        id\r\n         attachments {\r\n          file\r\n          file_type\r\n          thumb\r\n        }\r\n        }\r\n    }\r\n  }\r\n",
								"variables": "{\r\n \"parent_id\": \"root\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query list_goals_root",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query(\r\n    $first: Int!\r\n    $page: Int!\r\n    $orderBy: JSON\r\n    $search: JSON\r\n) {\r\n  list_goals_root(\r\n      first:$first\r\n      page: $page\r\n      orderBy: $orderBy\r\n      search: $search\r\n  ) {\r\n    goals{\r\n      id\r\n      name\r\n      user{\r\n          id\r\n          name\r\n      }\r\n      status\r\n      price\r\n      number_member\r\n      created_at\r\n      updated_at\r\n    }\r\n    total_page\r\n    }\r\n  }\r\n",
								"variables": "{\r\n    \"first\":10,\r\n    \"page\":1,\r\n    \"orderBy\": {\r\n        \"column\": \"updated_at\",\r\n        \"order\": \"DESC\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_goals_publish",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  my_goals_publish{\r\n      id\r\n      name\r\n      achieves\r\n      shares\r\n  }\r\n}\r\n",
								"variables": "{\r\n   \r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query count_goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($parent_id: String!) {\r\n  count_goal(parent_id: $parent_id) {\r\n      status\r\n      number\r\n  }\r\n  }\r\n",
								"variables": "{\r\n \"parent_id\": \"all\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_goals_achieve",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($parent_id: String!){\r\n  my_goals_achieve(parent_id: $parent_id) {\r\n    id\r\n    name\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    start_day\r\n    end_day\r\n    status\r\n    is_pined\r\n    progress\r\n    next_goal\r\n    general_info{\r\n        id\r\n        address\r\n        zalo\r\n        repeat\r\n        reminder\r\n        action_at\r\n        action_at_time\r\n        note\r\n        publish\r\n        color\r\n        attachments{\r\n            file\r\n            file_type\r\n            thumb\r\n        }\r\n    }\r\n}\r\n}",
								"variables": "{\r\n \"parent_id\": \"root\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_goals_share",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  my_goals_share{\r\n      id\r\n    name\r\n    user{\r\n        id\r\n        name\r\n    }\r\n    start_day\r\n    end_day\r\n    status\r\n    is_pined\r\n    progress\r\n    next_goal\r\n    general_info{\r\n        id\r\n        address\r\n        zalo\r\n        repeat\r\n        reminder\r\n        action_at\r\n        action_at_time\r\n        note\r\n        publish\r\n        color\r\n        attachments{\r\n            file\r\n            file_type\r\n            thumb\r\n        }\r\n    }\r\n  }\r\n    \r\n}",
								"variables": "{\r\n\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query detail_goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!){\r\n  detail_goal(id: $id) {\r\n    id\r\n    name\r\n    banned_users\r\n    price\r\n    owner_percent\r\n    setting_for_sell\r\n    goal_root{\r\n        id\r\n        name\r\n    }\r\n    parent{\r\n        id\r\n    }\r\n    trial_block\r\n    start_day\r\n    end_day\r\n    status\r\n    is_pined\r\n    general_info{\r\n        id\r\n        address\r\n        zalo\r\n        repeat\r\n        reminder\r\n        action_at\r\n        action_at_time\r\n        note\r\n        publishs{\r\n            id\r\n        }\r\n        color\r\n        attachments{\r\n            file\r\n            file_type\r\n            thumb\r\n        }\r\n        achieves{\r\n            id\r\n            user{\r\n                id\r\n                name\r\n            \r\n        }\r\n        \r\n    }\r\n  }\r\n}\r\n}",
								"variables": "{\r\n    \"id\":\"1994\"\r\n}\r\n"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query search_goals",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($parent_id: String, $first: Int!, $page: Int!, $orderBy: [OrderByClause!]) {\r\n  search_goals(parent_id: $parent_id, first: $first, page: $page, orderBy: $orderBy) {\r\n    data {\r\n      id\r\n      user{\r\n          id\r\n      }\r\n      name\r\n      parent{\r\n          id\r\n            name\r\n      }\r\n      created_at\r\n      updated_at\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"parent_id\": null,\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"ASC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_goals",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  goals(first:22, page:1) {\r\n    data {\r\n    id\r\n    parent{\r\n        id\r\n        name\r\n    }\r\n    name\r\n    user{\r\n        id\r\n    }\r\n    start_day\r\n    end_day\r\n    is_pined\r\n    created_at\r\n    updated_at\r\n  }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query ban_user_goals",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $user_id: ID!\r\n    $goal_ids: [ID!]\r\n) {\r\n   ban_user_goals(\r\n       user_id: $user_id\r\n       goal_ids: $goal_ids\r\n   )\r\n}",
								"variables": "{\r\n    \"user_id\": 5,\r\n    \"goal_ids\": [7103,10048]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query sort_goals",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query( $first: Int!, $page: Int!, $orderBy: [OrderByClause!]){\r\n  sort_goals(\r\n      \r\n      first: $first, \r\n      page: $page, \r\n      orderBy: $orderBy\r\n    ) {\r\n    data {\r\n      id\r\n      name\r\n      created_at\r\n      user{\r\n          id\r\n          name\r\n      }\r\n    }\r\n    paginatorInfo {\r\n      total\r\n      currentPage\r\n      hasMorePages\r\n      lastPage\r\n    }\r\n  }\r\n}\r\n\r\n",
								"variables": "{\r\n    \"first\": 10,\r\n    \"page\": 1,\r\n    \"orderBy\": [{\r\n        \"column\": \"id\",\r\n        \"order\": \"DESC\"\r\n    }]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_goals_tree_sort",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query ($id: ID, $not_auth: Boolean) {  my_goals_tree_sort(id: $id, not_auth: $not_auth)}",
								"variables": "{\r\n    \"id\":\"73dbe6-8e8c-612-621c-a2035b7fd\",\r\n    \"not_auth\":\ttrue\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query gantt_chart_sort",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID) {\r\n  gantt_chart_sort(id: $id)\r\n}",
								"variables": "{\r\n    \"id\": 1\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "goals_achieve_tree_sort",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID, $not_auth: Boolean) {\r\n   goals_achieve_tree_sort(id: $id,not_auth: $not_auth)\r\n}",
								"variables": "{\r\n \"id\":\"16406662225\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "goals_share_tree_sort",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID) {\r\n   goals_share_tree_sort(id: $id)\r\n}",
								"variables": "{\r\n \"id\":10046\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_goals_tree_select",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query (\r\n    $root_id: ID!\r\n){\r\n  my_goals_tree_select(\r\n      root_id: $root_id\r\n  )\r\n}",
								"variables": "{\r\n   \"root_id\": 1994\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "goal_members",
			"item": [
				{
					"name": "upsert_goal_member",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id : ID\r\n    $add_user_id:ID\r\n    $goal_ids : [ID]\r\n) {\r\n  upsert_goal_member(\r\n    input: {\r\n        id : $id\r\n        add_user_id: $add_user_id\r\n        goal_ids: $goal_ids\r\n    }\r\n  ) {\r\n        id\r\n        add_user{\r\n            id\r\n            name\r\n        }\r\n        user{\r\n            id\r\n            name\r\n        }\r\n        goal{\r\n            id\r\n            name\r\n        }\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"add_user_id\": 120,\r\n    \"goal_ids\":16406733866\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_goal_member",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $id : ID\r\n    $goal_id: ID\r\n) {\r\n  delete_goal_member(\r\n    input: {\r\n        id : $id\r\n        goal_id: $goal_id\r\n    }\r\n  ) \r\n}\r\n",
								"variables": "{\r\n    \"id\":12\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_goal_member_by_goal_id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation(\r\n    $goal_id : ID\r\n) {\r\n  delete_goal_member_by_goal_id(\r\n    input: {\r\n        goal_id : $goal_id\r\n    }\r\n  ) \r\n}\r\n",
								"variables": "{\r\n    \"goal_id\":40\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query my_goal_member",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  my_goal_members{\r\n        id\r\n        add_user{\r\n            id\r\n            name\r\n        }\r\n        user{\r\n            id\r\n            name\r\n        }\r\n        goal{\r\n            id\r\n            name\r\n        }\r\n    }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query goal_members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query(\r\n    $name_add_user: String\r\n    $name_goal: String\r\n) {\r\n  goal_members(\r\n      name_add_user: $name_add_user\r\n      name_goal: $name_goal\r\n  ){\r\n        id\r\n        add_user{\r\n            id\r\n            name\r\n        }\r\n        user{\r\n            id\r\n            name\r\n        }\r\n        goal{\r\n            id\r\n            name\r\n        }\r\n        created_at\r\n    }\r\n}\r\n",
								"variables": "{\r\n    \"name_add_user\":\"\",\r\n    \"name_goal\":\"\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query summary_goal_members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  summary_goal_members {\r\n   id\r\n    goal{\r\n        id\r\n        name\r\n    }\r\n    number_member\r\n    created_at\r\n    }\r\n}",
								"variables": "{\r\n\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}