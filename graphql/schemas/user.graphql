
extend type Mutation {
    create_user(input: CreateUserInput! @spread): User @guard @field(resolver: "App\\GraphQL\\Mutations\\UserMutations@createUser")
    update_user(input: UpdateUserInput! @spread): User @guard @field(resolver: "App\\GraphQL\\Mutations\\UserMutations@updateUser")
    delete_user(input: DeleteUserInput! @spread): Boolean @guard @field(resolver: "App\\GraphQL\\Mutations\\UserMutations@deleteUser")

}

extend type Query {
    me_attachment: JSON @guard @field(resolver:"UserQueries@me_attachment")
}

input CreateUserInput{
    name: String
    email: String
    password: String
    roles: JSON
    role_label: String
    username: String
    quotes: String
    phone_number: String
    avatar_attachment_id: ID
    background_attachment_id : ID
}

input UpdateUserInput{
    id: ID
    name: String
    email: String
    roles: JSON
    role_label: String
    username: String
    quotes: String
    phone_number: String
    avatar_attachment_id: ID
    background_attachment_id : ID
    is_flag: Boolean
}
input DeleteUserInput{
    id: ID
}


